#Использовать "../../../src"

// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯВызываюФункциюСозданияИнформационнойБазыСИменемВКластере");
	ВсеШаги.Добавить("ПолучаюСписокИнформационныхБаз");
	ВсеШаги.Добавить("ВСпискеИнформационныхБазСуществуетБазаСИменем");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	Лог = Служебный.Лог();

	Лог.УстановитьУровень(УровниЛога.Отладка);
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//получаю список информационных баз
Процедура ПолучаюСписокИнформационныхБаз() Экспорт
	ВызватьИсключение Новый ИнформацияОбОшибке("Шаг <ПолучаюСписокИнформационныхБаз> не реализован", "Не реализовано.");
КонецПроцедуры

//в списке информационных баз существует база с именем "IRAC_TEST"
Процедура ВСпискеИнформационныхБазСуществуетБазаСИменем(Знач ПарамСтрока1) Экспорт
	ВызватьИсключение Новый ИнформацияОбОшибке("Шаг <ВСпискеИнформационныхБазСуществуетБазаСИменем> не реализован", "Не реализовано.");
КонецПроцедуры

//Я вызываю функцию создания информационной базы с именем "IRAC_TEST" в кластере "server"
Процедура ЯВызываюФункциюСозданияИнформационнойБазыСИменемВКластере(Знач ИмяБазы, Знач АдресКластера) Экспорт
	
	АгентКластера = Новый УправлениеКластером1С(, АдресКластера);

	Кластеры = АгентКластера.Кластеры();

	Кластер = Кластеры.Получить(АдресКластера);

	Для каждого Кластер Из Кластеры.Список() Цикл
		Сообщить("Имя:" + Кластер.Получить("Имя") + " Порт: " + Кластер.ПортСервера() + " Имя сервера:" + Кластер.АдресСервера());
	КонецЦикла;

	ИБ = Кластер.ИнформационныеБазы();

	ПараметрыИБ = Новый Структура();

	ПараметрыИБ.Вставить("ТипСУБД"                                , Перечисления.ТипыСУБД.PostgreSQL);
	ПараметрыИБ.Вставить("АдресСервераСУБД"                        , АдресКластера);
	ПараметрыИБ.Вставить("ИмяБазыСУБД"                            , ИмяБазы);
	ПараметрыИБ.Вставить("АдресСервераСУБД"           			  , "db");
	ПараметрыИБ.Вставить("ИмяПользователяБазыСУБД"                , "_1CSrvUsr1");
	ПараметрыИБ.Вставить("ПарольПользователяБазыСУБД"            , "q2w3e4r5");
	ПараметрыИБ.Вставить("БлокировкаРегламентныхЗаданийВключена", Перечисления.СостоянияВыключателя.Выключено);
	ПараметрыИБ.Вставить("ВыдачаЛицензийСервером"                , Перечисления.ПраваДоступа.Разрешено);

	ИБ.ОбновитьДанные(Истина);
	КоличествоИБ = ИБ.Количество();

	ИБ.Добавить(ИмяБазы, , Истина, ПараметрыИБ);

КонецПроцедуры
