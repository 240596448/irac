Перем Кластер_Агент;
Перем Кластер_Владелец;
Перем Элементы;
Перем Лог;

Процедура ПриСозданииОбъекта(АгентКластера, Кластер)

	Кластер_Агент = АгентКластера;
	Кластер_Владелец = Кластер;

	ОбновитьДанные();

КонецПроцедуры

Процедура ОбновитьДанные()

	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("cluster");
	ПараметрыЗапуска.Добавить("admin");
	ПараметрыЗапуска.Добавить("list");

	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Кластер_Владелец.СтрокаАвторизации());

	Служебный.ВыполнитьКоманду(ПараметрыЗапуска);
	
	МассивРезультатов = Служебный.РазобратьВыводКоманды(Служебный.ВыводКоманды());

	Элементы = Новый Соответствие();
	Для Каждого ТекОписание Из МассивРезультатов Цикл
		Элементы.Вставить(ТекОписание["name"], ТекОписание);
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьСписок(ОбновитьДанные = Ложь) Экспорт

	Если ОбновитьДанные Тогда
		ОбновитьДанные();
	КонецЕсли;

	Возврат Элементы;

КонецФункции

Функция Получить(Имя, ОбновитьДанные = Ложь) Экспорт

	Если ОбновитьДанные Тогда
		ОбновитьДанные();
	КонецЕсли;

	Возврат Элементы[Имя];

КонецФункции

Процедура Добавить(Имя
				 , Пароль = ""
				 , УстановитьТекущим = Ложь
				 , Описание = ""
				 , СпособАвторизации = "pwd"
				 , ПользовательОС = "") Экспорт

	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("cluster");
	ПараметрыЗапуска.Добавить("admin");
	ПараметрыЗапуска.Добавить("register");
	
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаАвторизации());

	ПараметрыЗапуска.Добавить(СтрШаблон("--name=%1", Имя));
	ПараметрыЗапуска.Добавить(СтрШаблон("--pwd=%1", Пароль));
	ПараметрыЗапуска.Добавить(СтрШаблон("--descr=%1", Описание));
	ПараметрыЗапуска.Добавить(СтрШаблон("--auth=%1", СпособАвторизации));
	ПараметрыЗапуска.Добавить(СтрШаблон("--os-user=%1", ПользовательОС));
	
	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Кластер_Владелец.СтрокаАвторизации());
	
	Служебный.ВыполнитьКоманду(ПараметрыЗапуска);
	
	Если УстановитьТекущим Тогда
		Кластер_Владелец.УстановитьАдминистратора(Имя, Пароль);
	КонецЕсли;

	Лог.Информация(Служебный.ВыводКоманды());

	ОбновитьДанные();

КонецПроцедуры

Процедура Удалить(Имя) Экспорт

	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("cluster");
	ПараметрыЗапуска.Добавить("admin");
	ПараметрыЗапуска.Добавить("remove");
	
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаАвторизации());

	ПараметрыЗапуска.Добавить(СтрШаблон("--name=%1", Имя));

	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Кластер_Владелец.СтрокаАвторизации());
	
	Служебный.ВыполнитьКоманду(ПараметрыЗапуска);
	
	Лог.Информация(Служебный.ВыводКоманды());

	ОбновитьДанные();

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
