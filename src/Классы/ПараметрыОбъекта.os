// Класс хранящий структуру параметров объекта указанного типа
// Доступны типы:
//        profile            - Профиль
//        profile.directory    - Профиль.Каталог
//        profile.com            - Профиль.COMКласс
//        profile.addin        - Профиль.Компонент
//        profile.module        - Профиль.Модуль
//        profile.app            - Профиль.Приложение
//        profile.inet        - Профиль.ИнтернетРесурс
//        counter            - СчетчикПотребленияРесурсов

Перем ТипОбъекта;
Перем Параметры;

Перем Лог;

// Конструктор
//   
// Параметры:
//   ИмяТипаОбъекта            - Строка    - имя типа объекта для которого создается структура параметров
//
Процедура ПриСозданииОбъекта(ИмяТипаОбъекта)

	ПроцедурыЗаполнения = Новый Соответствие();
	ПроцедурыЗаполнения.Вставить(ВРег("profile.directory")       , "ЗаполнитьПараметрыКаталогаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Каталог")         , "ЗаполнитьПараметрыКаталогаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.com")             , "ЗаполнитьПараметрыCOMКлассаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.COMКласс")        , "ЗаполнитьПараметрыCOMКлассаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.addin")           , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Компонент")       , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.module")          , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Модуль")          , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.app")             , "ЗаполнитьПараметрыПриложенияПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Приложение")      , "ЗаполнитьПараметрыПриложенияПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.inet")            , "ЗаполнитьПараметрыИнтернетРесурсаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.ИнтернетРесурс")  , "ЗаполнитьПараметрыИнтернетРесурсаПрофиля");
	
	ПроцедураЗаполнения = ПроцедурыЗаполнения[ВРег(ИмяТипаОбъекта)];

	Если НЕ ПроцедураЗаполнения = Неопределено Тогда
		Рефлектор = Новый Рефлектор();
		Рефлектор.ВызватьМетод(ЭтотОбъект, ПроцедураЗаполнения, Новый Массив());
	КонецЕсли;

КонецПроцедуры // ПриСозданииОбъекта()

// Функция возвращает коллекцию параметров объекта
//   
// Параметры:
//   ИмяПоляКлюча         - Строка    - имя поля, значение которого будет использовано
//                                      в качестве ключа возвращаемого соответствия
//   
// Возвращаемое значение:
//    Соответствие - коллекция параметров объекта, для получения/изменения значений
//
Функция Получить(ИмяПоляКлюча = "ИмяПараметра") Экспорт
	
	СтруктураПараметров = Новый Соответствие();

	Если НЕ ТипЗнч(Параметры) = Тип("Массив") Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;

	Для Каждого ТекПараметр Из Параметры Цикл
		СтруктураПараметров.Вставить(ТекПараметр[ИмяПоляКлюча], ТекПараметр);
	КонецЦикла;

	Возврат СтруктураПараметров;

КонецФункции // Получить()

// Процедура добавляет описание параметра в массив параметров
//   
// Параметры:
//   ИмяПараметра           - Строка                - имя параметра объекта
//   ИмяПоляРАК             - Строка                - имя поля, как оно возвращается утилитой RAC
//   ЗначениеПоУмолчанию    - Произвольный          - значение поля объекта по умолчанию
//   Использование          - Строка, Структура     - строка содержащая флаги использования, разделенные ","
//                                                    (Чтение, Добавление, Изменение)
//                                                    если указана структура, то в значении можно переопределить
//                                                    имя параметра утилиты RAC
//   
Процедура ДобавитьПараметрОписанияОбъекта(Знач ИмяПараметра
	                                , Знач ИмяПоляРАК
	                                , Знач ЗначениеПоУмолчанию = ""
	                                , Знач Использование = "Чтение")

	Если НЕ ТипЗнч(Параметры) = Тип("Массив") Тогда
		Параметры = Новый Массив();
	КонецЕсли;

	Если ТипЗнч(Использование) = Тип("Строка") Тогда
		Использование = Новый Структура(Использование);
	ИначеЕсли НЕ  ТипЗнч(Использование) = Тип("Структура") Тогда
		Использование = Новый Структура();
	КонецЕсли;

	ОписаниеПоля = Новый Структура();
	ОписаниеПоля.Вставить("ИмяПараметра"        , ИмяПараметра);
	ОписаниеПоля.Вставить("ИмяПоляРак"          , ИмяПоляРак);
	ОписаниеПоля.Вставить("ПараметрКоманды"     , "");
	ОписаниеПоля.Вставить("ЗначениеПоУмолчанию" , ЗначениеПоУмолчанию);
	ОписаниеПоля.Вставить("Чтение"              , Использование.Свойство("Чтение"));
	ОписаниеПоля.Вставить("Добавление"          , Использование.Свойство("Добавление"));
	ОписаниеПоля.Вставить("Изменение"           , Использование.Свойство("Изменение"));

	Если Использование.Свойство("ПараметрКоманды") Тогда
		ОписаниеПоля.ПараметрКоманды = Использование.ПараметрКоманды;
	ИначеЕсли ОписаниеПоля.Добавление ИЛИ ОписаниеПоля.Изменение Тогда
		ОписаниеПоля.ПараметрКоманды = "--" + ОписаниеПоля.ИмяПоляРАК;
	КонецЕсли;

	Параметры.Добавить(ОписаниеПоля);

КонецПроцедуры // ДобавитьПараметрОписанияОбъекта()

// Процедура заполняет массив описаний параметров виртуального каталога профиля безопасности
//
Процедура ЗаполнитьПараметрыКаталогаПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"            , "alias");
	ДобавитьПараметрОписанияОбъекта("Описание"        , "descr"            , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ПутьККаталогу"    , "physicalPath"    , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Чтение"        , "allowedRead"        , Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьПараметрОписанияОбъекта("Запись"        , "allowedWrite"    , Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");
	
КонецПроцедуры // ЗаполнитьПараметрыКаталогаПрофиля()

// Процедура заполняет массив описаний параметров COM-класса профиля безопасности
//
Процедура ЗаполнитьПараметрыCOMКлассаПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"            , "name");
	ДобавитьПараметрОписанияОбъекта("Описание"        , "descr"        , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ИмяФайла"        , "fileName"    , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ИдКласса"        , "id"            , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Компьютер"        , "host"        , "", "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыCOMКлассаПрофиля()

// Процедура заполняет массив описаний параметров внешней компоненты или модуля профиля безопасности
//
Процедура ЗаполнитьПараметрыКомпонентыМодуляПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"        , "name");
	ДобавитьПараметрОписанияОбъекта("Описание"    , "descr"    , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Хэш"        , "hash", , "Чтение, Добавление, Изменение");
	
КонецПроцедуры // ЗаполнитьПараметрыКомпонентыМодуляПрофиля()

// Процедура заполняет массив описаний параметров разрешенного приложения профиля безопасности
//
Процедура ЗаполнитьПараметрыПриложенияПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"        , "name");
	ДобавитьПараметрОписанияОбъекта("Описание"    , "descr"    , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Маска"        , "wild"    , "*", "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыПриложенияПрофиля()

// Процедура заполняет массив описаний параметров интернет ресурса профиля безопасности
//
Процедура ЗаполнитьПараметрыИнтернетРесурсаПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"            , "name");
	ДобавитьПараметрОписанияОбъекта("Описание"        , "descr"        , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Протокол"        , "protocol"    , "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("АдресРесурса"    , "url"            , "http", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ПортСервера"    , "port"        , "", "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыИнтернетРесурсаПрофиля()

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
