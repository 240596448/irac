// Класс хранящий структуру параметров объекта указанного типа
// Доступны типы:
//		cluster			- Кластер
//		admin			- Администратор (агента / кластера)
//		lock			- Блокировка
//		manager			- МенеджерКластера
//		process			- РабочийПроцесс
//		server			- Сервер
//		service			- Сервис
//		session			- Сеанс
//		connection		- Соединение
//		process.license	- РабочийПроцесс.Лицензия
//		session.license	- Сеанс.Лицензия
//		rule			- ТребованиеНазначения
//		profile			- Профиль
//		profile.directory	- Профиль.Каталог
//		profile.com			- Профиль.COMКласс
//		profile.addin		- Профиль.Компонент
//		profile.module		- Профиль.Модуль
//		profile.app			- Профиль.Приложение
//		profile.inet		- Профиль.ИнтернетРесурс

Перем ТипОбъекта;
Перем Параметры;

Перем Лог;

// Конструктор
//   
// Параметры:
//   ИмяТипаОбъекта			- Строка	- имя типа объекта для которого создается структура параметров
//
Процедура ПриСозданииОбъекта(ИмяТипаОбъекта)

	ПроцедурыЗаполнения = Новый Соответствие();
	ПроцедурыЗаполнения.Вставить(ВРег("lock")                    , "ЗаполнитьПараметрыБлокировки");
	ПроцедурыЗаполнения.Вставить(ВРег("Блокировка")              , "ЗаполнитьПараметрыБлокировки");
	ПроцедурыЗаполнения.Вставить(ВРег("manager")                 , "ЗаполнитьПараметрыМенеджераКластера");
	ПроцедурыЗаполнения.Вставить(ВРег("МенеджерКластера")        , "ЗаполнитьПараметрыМенеджераКластера");
	ПроцедурыЗаполнения.Вставить(ВРег("process")                 , "ЗаполнитьПараметрыРабочегоПроцесса");
	ПроцедурыЗаполнения.Вставить(ВРег("РабочийПроцесс")          , "ЗаполнитьПараметрыРабочегоПроцесса");
	ПроцедурыЗаполнения.Вставить(ВРег("server")                  , "ЗаполнитьПараметрыСервера");
	ПроцедурыЗаполнения.Вставить(ВРег("Сервер")                  , "ЗаполнитьПараметрыСервера");
	ПроцедурыЗаполнения.Вставить(ВРег("service")                 , "ЗаполнитьПараметрыСервиса");
	ПроцедурыЗаполнения.Вставить(ВРег("Сервис")                  , "ЗаполнитьПараметрыСервиса");
	ПроцедурыЗаполнения.Вставить(ВРег("session")                 , "ЗаполнитьПараметрыСеанса");
	ПроцедурыЗаполнения.Вставить(ВРег("Сеанс")                   , "ЗаполнитьПараметрыСеанса");
	ПроцедурыЗаполнения.Вставить(ВРег("connection")              , "ЗаполнитьПараметрыСоединения");
	ПроцедурыЗаполнения.Вставить(ВРег("Соединение")              , "ЗаполнитьПараметрыСоединения");
	ПроцедурыЗаполнения.Вставить(ВРег("process.license")         , "ЗаполнитьПараметрыЛицензииПроцесса");
	ПроцедурыЗаполнения.Вставить(ВРег("Процесс.Лицензия")        , "ЗаполнитьПараметрыЛицензииПроцесса");
	ПроцедурыЗаполнения.Вставить(ВРег("session.license")         , "ЗаполнитьПараметрыЛицензииСеанса");
	ПроцедурыЗаполнения.Вставить(ВРег("Сеанс.Лицензия")          , "ЗаполнитьПараметрыЛицензииСеанса");
	ПроцедурыЗаполнения.Вставить(ВРег("rule")                    , "ЗаполнитьПараметрыТребованияНазначения");
	ПроцедурыЗаполнения.Вставить(ВРег("ТребованиеНазначения")    , "ЗаполнитьПараметрыТребованияНазначения");
	ПроцедурыЗаполнения.Вставить(ВРег("profile")                 , "ЗаполнитьПараметрыПрофиляБезопасности");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль")                 , "ЗаполнитьПараметрыПрофиляБезопасности");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.directory")       , "ЗаполнитьПараметрыКаталогаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Каталог")         , "ЗаполнитьПараметрыКаталогаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.com")             , "ЗаполнитьПараметрыCOMКлассаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.COMКласс")        , "ЗаполнитьПараметрыCOMКлассаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.addin")           , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Компонент")       , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.module")          , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Модуль")          , "ЗаполнитьПараметрыКомпонентыМодуляПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.app")             , "ЗаполнитьПараметрыПриложенияПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.Приложение")      , "ЗаполнитьПараметрыПриложенияПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("profile.inet")            , "ЗаполнитьПараметрыИнтернетРесурсаПрофиля");
	ПроцедурыЗаполнения.Вставить(ВРег("Профиль.ИнтернетРесурс")  , "ЗаполнитьПараметрыИнтернетРесурсаПрофиля");

	ПроцедураЗаполнения = ПроцедурыЗаполнения[ВРег(ИмяТипаОбъекта)];

	Если НЕ ПроцедураЗаполнения = Неопределено Тогда
		Рефлектор = Новый Рефлектор();
		Рефлектор.ВызватьМетод(ЭтотОбъект, ПроцедураЗаполнения, Новый Массив());
	КонецЕсли;

КонецПроцедуры // ПриСозданииОбъекта()

// Функция возвращает коллекцию параметров объекта
//   
// Параметры:
//   ИмяПоляКлюча 		- Строка	- имя поля, значение которого будет использовано
//									  в качестве ключа возвращаемого соответствия
//   
// Возвращаемое значение:
//	Соответствие - коллекция параметров объекта, для получения/изменения значений
//
Функция Получить(ИмяПоляКлюча = "ИмяПараметра") Экспорт
	
	СтруктураПараметров = Новый Соответствие();

	Если НЕ ТипЗнч(Параметры) = Тип("Массив") Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;

	Для Каждого ТекПараметр Из Параметры Цикл
		СтруктураПараметров.Вставить(ТекПараметр[ИмяПоляКлюча], ТекПараметр);
	КонецЦикла;

	Возврат СтруктураПараметров;

КонецФункции // Получить()

// Процедура добавляет описание параметра в массив параметров
//   
// Параметры:
//   ИмяПараметра           - Строка                - имя параметра объекта
//   ИмяПоляРАК             - Строка                - имя поля, как оно возвращается утилитой RAC
//   ЗначениеПоУмолчанию    - Произвольный          - значение поля объекта по умолчанию
//   Использование          - Строка, Структура     - строка содержащая флаги использования, разделенные ","
//                                                    (Чтение, Добавление, Изменение)
//                                                    если указана структура, то в значении можно переопределить
//                                                    имя параметра утилиты RAC
//   
Процедура ДобавитьПараметрОписанияОбъекта(Знач ИмяПараметра
									, Знач ИмяПоляРАК
									, Знач ЗначениеПоУмолчанию = ""
									, Знач Использование = "Чтение")

	Если НЕ ТипЗнч(Параметры) = Тип("Массив") Тогда
		Параметры = Новый Массив();
	КонецЕсли;

	Если ТипЗнч(Использование) = Тип("Строка") Тогда
		Использование = Новый Структура(Использование);
	ИначеЕсли НЕ  ТипЗнч(Использование) = Тип("Структура") Тогда
		Использование = Новый Структура();
	КонецЕсли;

	ОписаниеПоля = Новый Структура();
	ОписаниеПоля.Вставить("ИмяПараметра"        , ИмяПараметра);
	ОписаниеПоля.Вставить("ИмяПоляРак"          , ИмяПоляРак);
	ОписаниеПоля.Вставить("ПараметрКоманды"     , "");
	ОписаниеПоля.Вставить("ЗначениеПоУмолчанию" , ЗначениеПоУмолчанию);
	ОписаниеПоля.Вставить("Чтение"              , Использование.Свойство("Чтение"));
	ОписаниеПоля.Вставить("Добавление"          , Использование.Свойство("Добавление"));
	ОписаниеПоля.Вставить("Изменение"           , Использование.Свойство("Изменение"));

	Если Использование.Свойство("ПараметрКоманды") Тогда
		ОписаниеПоля.ПараметрКоманды = Использование.ПараметрКоманды;
	ИначеЕсли ОписаниеПоля.Добавление ИЛИ ОписаниеПоля.Изменение Тогда
		ОписаниеПоля.ПараметрКоманды = "--" + ОписаниеПоля.ИмяПоляРАК;
	КонецЕсли;

	Параметры.Добавить(ОписаниеПоля);

КонецПроцедуры // ДобавитьПараметрОписанияОбъекта()

// Процедура заполняет массив описаний параметров блокировки
//
Процедура ЗаполнитьПараметрыБлокировки() Экспорт

	ДобавитьПараметрОписанияОбъекта("Соединение_Ид"		, "connection");
	ДобавитьПараметрОписанияОбъекта("Сеанс_Ид"			, "session");
	ДобавитьПараметрОписанияОбъекта("Объект_Ид"			, "object");
	ДобавитьПараметрОписанияОбъекта("НачалоБлокировки"	, "locked");
	ДобавитьПараметрОписанияОбъекта("Описание"			, "descr");
	
КонецПроцедуры // ЗаполнитьПараметрыБлокировки()

// Процедура заполняет массив описаний параметров менеджера кластера
//
Процедура ЗаполнитьПараметрыМенеджераКластера() Экспорт

	ДобавитьПараметрОписанияОбъекта("Ид"			, "manager");
	ДобавитьПараметрОписанияОбъекта("ИдПроцессаОС"	, "pid");
	ДобавитьПараметрОписанияОбъекта("Назначение"	, "using");
	ДобавитьПараметрОписанияОбъекта("АдресСервера"	, "host");
	ДобавитьПараметрОписанияОбъекта("ПортСервера"	, "port");
	ДобавитьПараметрОписанияОбъекта("Описание"		, "descr");

КонецПроцедуры // ЗаполнитьПараметрыМенеджераКластера()

// Процедура заполняет массив описаний параметров рабочего процесса
//
Процедура ЗаполнитьПараметрыРабочегоПроцесса() Экспорт

    ДобавитьПараметрОписанияОбъекта("Ид"							, "process");
	ДобавитьПараметрОписанияОбъекта("АдресСервера"					, "host");
	ДобавитьПараметрОписанияОбъекта("ПортСервера"					, "port");
	ДобавитьПараметрОписанияОбъекта("ИдПроцессаОС"					, "pid");
	ДобавитьПараметрОписанияОбъекта("Активен"						, "is-enable");
	ДобавитьПараметрОписанияОбъекта("Выполняется"					, "running");
	ДобавитьПараметрОписанияОбъекта("ВремяЗапуска"					, "started-at");
	ДобавитьПараметрОписанияОбъекта("Использование"					, "use");
	ДобавитьПараметрОписанияОбъекта("ДоступнаяПроизводительность"	, "available-perfomance");
	ДобавитьПараметрОписанияОбъекта("Емкость"						, "capacity");
	ДобавитьПараметрОписанияОбъекта("КоличествоСоединений"			, "connections");
	ДобавитьПараметрОписанияОбъекта("ЗанятьПамяти"					, "memory-size");
	ДобавитьПараметрОписанияОбъекта("ВремяПревышенияЗанятойПамяти"	, " memory-excess-time");
	ДобавитьПараметрОписанияОбъекта("ОбъемВыборки"					, "selection-size");
	ДобавитьПараметрОписанияОбъекта("ЗатраченоКлиентом"				, "avg-back-call-time");
	ДобавитьПараметрОписанияОбъекта("ЗатраченоВсего"				, "avg-call-time");
	ДобавитьПараметрОписанияОбъекта("ЗатраченоСУБД"					, "avg-db-call-time");
	ДобавитьПараметрОписанияОбъекта("ЗатраченоМенеджеромБлокировок"	, "avg-lock-call-time");
	ДобавитьПараметрОписанияОбъекта("ЗатраченоСервером"				, "avg-server-call-time");
	ДобавитьПараметрОписанияОбъекта("КлиентскихПотоков"				, "avg-threads");

КонецПроцедуры // ЗаполнитьПараметрыРабочегоПроцесса()

// Процедура заполняет массив описаний параметров сервера
//
Процедура ЗаполнитьПараметрыСервера() Экспорт
	
	ДиапазонПортов = "1560:1591";
	КоличествоИБНаПроцесс = 8;
	КоличествоСоединенийНаПроцесс = 128;
	ПортГлавногоМенеджераКластера = "1541";
	ПортАгента = "1540";

	ДобавитьПараметрОписанияОбъекта("Ид"								, "server");
	ДобавитьПараметрОписанияОбъекта("Имя"								, "name");
	ДобавитьПараметрОписанияОбъекта("СерверАгента"						, "agent-host"		, "localhost");
	ДобавитьПараметрОписанияОбъекта("ПортАгента"						, "agent-port"		, ПортАгента);
	ДобавитьПараметрОписанияОбъекта("ДиапазонПортов"					, "port-range"		, ДиапазонПортов,
	                                "Чтение, Добавление, Изменение");
	
	ДобавитьПараметрОписанияОбъекта("ЦентральныйСервер"					, "using",
									Перечисления.ВариантыИспользованияРабочегоСервера.Главный,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("МенеджерПодКаждыйСервис"			, "dedicate-managers",
									Перечисления.ВариантыРазмещенияСервисов.ВОдномМенеджере,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("КоличествоИБНаПроцесс"				, "infobases-limit"		,
									КоличествоИБНаПроцесс,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("МаксОбъемПамятиРабочихПроцессов"	, "memory-limit"		, 0,
	                                "Чтение, Добавление, Изменение");
	
	ДобавитьПараметрОписанияОбъекта("КоличествоСоединенийНаПроцесс"		, "connections-limit",
									КоличествоСоединенийНаПроцесс,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ПортГлавногоМенеджераКластера"		, "cluster-port",
									ПортГлавногоМенеджераКластера,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("БезопасныйОбъемПамятиРабочихПроцессов", "safe-working-processes-memory-limit", 0,
									"Чтение, Добавление, Изменение");
									
	ДобавитьПараметрОписанияОбъекта("БезопасныйРасходПамятиЗаОдинВызов"	, "safe-call-memory-limit"	, 0,
	                                "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыСервера()

// Процедура заполняет массив описаний параметров сервиса
//
Процедура ЗаполнитьПараметрыСервиса() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"						, "name");
	ДобавитьПараметрОписанияОбъекта("ТолькоГлавныйМенеджер"		, "main-only");
	ДобавитьПараметрОписанияОбъекта("Менеджер_Ид"				, "manager");
	ДобавитьПараметрОписанияОбъекта("Описание"					, "descr");

КонецПроцедуры // ЗаполнитьПараметрыСервиса()

// Процедура заполняет массив описаний параметров сеанса
//
Процедура ЗаполнитьПараметрыСеанса() Экспорт

	ДобавитьПараметрОписанияОбъекта("Ид"							, "session");
	ДобавитьПараметрОписанияОбъекта("НомерСеанса"					, "session-id");
	ДобавитьПараметрОписанияОбъекта("ИнформационнаяБаза_Ид"			, "infobase");
	ДобавитьПараметрОписанияОбъекта("Соединение_Ид"					, "connection");
	ДобавитьПараметрОписанияОбъекта("Процесс_Ид"					, "process");
	ДобавитьПараметрОписанияОбъекта("Пользователь"					, "user-name");
	ДобавитьПараметрОписанияОбъекта("Компьютер"						, "host");
	ДобавитьПараметрОписанияОбъекта("Приложение"					, "app-id");
	ДобавитьПараметрОписанияОбъекта("Язык"							, "locale");
	ДобавитьПараметрОписанияОбъекта("ВремяНачала"					, "started-at");
	ДобавитьПараметрОписанияОбъекта("ПоследняяАктивность"			, "last-active-at");
	ДобавитьПараметрОписанияОбъекта("Спящий"						, "hibernate");
	ДобавитьПараметрОписанияОбъекта("ЗаснутьЧерез"					, "passive-session-hibernate-time");
	ДобавитьПараметрОписанияОбъекта("ЗавершитьЧерез"				, "hibernate-session-terminate-time");
	ДобавитьПараметрОписанияОбъекта("ЗаблокированоСУБД"				, "blocked-by-dbms");
	ДобавитьПараметрОписанияОбъекта("ЗаблокированоУпр"				, "blocked-by-ls");
	ДобавитьПараметрОписанияОбъекта("ДанныхВсего"					, "bytes-all");
	ДобавитьПараметрОписанияОбъекта("Данных5мин"					, "bytes-last-5min");
	ДобавитьПараметрОписанияОбъекта("КоличествоВызововВсего"		, "calls-all");
	ДобавитьПараметрОписанияОбъекта("КоличествоВызовов5мин"			, "calls-last-5min");
	ДобавитьПараметрОписанияОбъекта("ДанныхСУБДВсего"				, "dbms-bytes-all");
	ДобавитьПараметрОписанияОбъекта("ДанныхСУБД5мин"				, "dbms-bytes-last-5min");
	ДобавитьПараметрОписанияОбъекта("СоединениеССУБД"				, "db-proc-info");
	ДобавитьПараметрОписанияОбъекта("ЗахваченоСУБД"					, "db-proc-took");
	ДобавитьПараметрОписанияОбъекта("ВремяЗахватаСУБД"				, "db-proc-took-at");
	ДобавитьПараметрОписанияОбъекта("ВремяВызововВсего"				, "duration-all");
	ДобавитьПараметрОписанияОбъекта("ВремяВызововСУБДВсего"			, "duration-all-dbms");
	ДобавитьПараметрОписанияОбъекта("ВремяВызововТекущее"			, "duration-current");
	ДобавитьПараметрОписанияОбъекта("ВремяВызововСУБДТекущее"		, "duration-current-dbms");
	ДобавитьПараметрОписанияОбъекта("ВремяВызовов5мин"				, "duration-last-5min");
	ДобавитьПараметрОписанияОбъекта("ВремяВызововСУБД5мин"			, "duration-last-5min-dbms");
		 
КонецПроцедуры // ЗаполнитьПараметрыСеанса()

// Процедура заполняет массив описаний параметров соединения
//
Процедура ЗаполнитьПараметрыСоединения() Экспорт

	ДобавитьПараметрОписанияОбъекта("Ид"					, "connection");
	ДобавитьПараметрОписанияОбъекта("НомерСоединения"		, "conn-id");
	ДобавитьПараметрОписанияОбъекта("Процесс_Ид"			, "process");
	ДобавитьПараметрОписанияОбъекта("ИнформационнаяБаза_Ид"	, "infobase");
	ДобавитьПараметрОписанияОбъекта("Приложение"			, "application");
	ДобавитьПараметрОписанияОбъекта("НачалоРаботы"			, "connected-at");
	ДобавитьПараметрОписанияОбъекта("НомерСеанса"			, "session-number");
	ДобавитьПараметрОписанияОбъекта("Заблокировано"			, "blocked-by-ls");
		 
КонецПроцедуры // ЗаполнитьПараметрыСоединения()

// Процедура заполняет массив описаний параметров лицензии (общие)
//
Процедура ЗаполнитьПараметрыЛицензииОбщие() Экспорт

	ДобавитьПараметрОписанияОбъекта("ПолноеИмя"				, "full-name");
	ДобавитьПараметрОписанияОбъекта("Серия"					, "series");
	ДобавитьПараметрОписанияОбъекта("ВыданаСервером"		, "issued-by-server");
	ДобавитьПараметрОписанияОбъекта("ТипЛицензии"			, "license-type");
	ДобавитьПараметрОписанияОбъекта("Сетевая"				, "net");
	ДобавитьПараметрОписанияОбъекта("МаксПользователей"		, "max-users-all");
	ДобавитьПараметрОписанияОбъекта("МаксПользователейТек"	, "max-users-cur");
	ДобавитьПараметрОписанияОбъекта("Менеджер_АдресСервера"	, "rmngr-address");
	ДобавитьПараметрОписанияОбъекта("Менеджер_ПортСервера"	, "rmngr-port");
	ДобавитьПараметрОписанияОбъекта("Менеджер_ИдОС"			, "rmngr-pid");
	ДобавитьПараметрОписанияОбъекта("КраткоеПредставление"	, "short-presentation");
	ДобавитьПараметрОписанияОбъекта("ПолноеПредставление"	, "full-presentation");

КонецПроцедуры // ЗаполнитьПараметрыЛицензииПроцесса()

// Процедура заполняет массив описаний параметров лицензии процесса
//
Процедура ЗаполнитьПараметрыЛицензииПроцесса() Экспорт

	ДобавитьПараметрОписанияОбъекта("Процесс_Ид"			, "process");
	ДобавитьПараметрОписанияОбъекта("Процесс_АдресСервера"	, "host");
	ДобавитьПараметрОписанияОбъекта("Процесс_ПортСервера"	, "port");
	ДобавитьПараметрОписанияОбъекта("Процесс_ИдОС"			, "pid");

	ЗаполнитьПараметрыЛицензииОбщие();

КонецПроцедуры // ЗаполнитьПараметрыЛицензииПроцесса()

// Процедура заполняет массив описаний параметров лицензии сеанса
//
Процедура ЗаполнитьПараметрыЛицензииСеанса() Экспорт

	ДобавитьПараметрОписанияОбъекта("Сеанс_Ид"				, "session");
	ДобавитьПараметрОписанияОбъекта("ИмяПользователя"		, "user-name");
	ДобавитьПараметрОписанияОбъекта("АдресМашины"			, "host");
	ДобавитьПараметрОписанияОбъекта("ТипПриложения"			, "app-id");

	ЗаполнитьПараметрыЛицензииОбщие();

КонецПроцедуры // ЗаполнитьПараметрыЛицензииСеанса()

// Процедура заполняет массив описаний параметров требования назначения
//
Процедура ЗаполнитьПараметрыТребованияНазначения() Экспорт

	ДобавитьПараметрОписанияОбъекта("Ид"			, "rule");
	ДобавитьПараметрОписанияОбъекта("ТипОбъекта"	, "object-type",
									Перечисления.ОбъектыНазначенияФункциональности.ЛюбойОбъект,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ИмяИБ"			, "infobase-name"	, "",
									"Чтение, Добавление, Изменение");
									
	ДобавитьПараметрОписанияОбъекта("ТипНазначения"	, "rule-type",
									Перечисления.ТипыНазначенияФункциональности.Авто,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ДопПараметр"	, "application-ext"	, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Приоритет"		, "priority"		, 0, "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыТребованияНазначения()

// Процедура заполняет массив описаний параметров профиля безопасности
//
Процедура ЗаполнитьПараметрыПрофиляБезопасности() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"							, "name");
	ДобавитьПараметрОписанияОбъекта("Описание"						, "descr", "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Каталоги"						, "directory",							
									Перечисления.РежимыДоступа.Список,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("COMКлассы"						, "com",
									Перечисления.РежимыДоступа.Список,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ВнешниеКомпоненты"				, "addin",
									Перечисления.РежимыДоступа.Список,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("Модули"						, "module",
									Перечисления.РежимыДоступа.Список,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("Приложения"					, "app",
									Перечисления.РежимыДоступа.Список,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ИнтернетРесурсы"				, "inet",
									Перечисления.РежимыДоступа.Список,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("Конфигуратор"					, "config",
									Перечисления.ДаНет.Нет,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ПривилегированныйРежим"		, "priv",
									Перечисления.ДаНет.Нет,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("Криптография"					, "crypto",
									Перечисления.ДаНет.Нет,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("РасширениеПрав"				, "right-extension",
									Перечисления.ДаНет.Нет,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ОграничивающиеРоли"			, "right-extension-definition-roles"	, "",
									"Чтение, Добавление, Изменение");
									
	ДобавитьПараметрОписанияОбъекта("РасширениеВсехМодулей"			, "all-modules-extension",
									Перечисления.ДаНет.Нет,
									"Чтение, Добавление, Изменение");

	ДобавитьПараметрОписанияОбъекта("ДоступныеМодули"				, "modules-available-for-extension"		, "",
									"Чтение, Добавление, Изменение");
									
	ДобавитьПараметрОписанияОбъекта("НедоступныеМодули"				, "modules-not-available-for-extension"	, "",
	                                "Чтение, Добавление, Изменение");
    
КонецПроцедуры // ЗаполнитьПараметрыПрофиляБезопасности()

// Процедура заполняет массив описаний параметров виртуального каталога профиля безопасности
//
Процедура ЗаполнитьПараметрыКаталогаПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"			, "alias");
	ДобавитьПараметрОписанияОбъекта("Описание"		, "descr"			, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ПутьККаталогу"	, "physicalPath"	, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Чтение"		, "allowedRead"		, Перечисления.ДаНет.Нет,
									"Чтение, Добавление, Изменение");
									
	ДобавитьПараметрОписанияОбъекта("Запись"		, "allowedWrite"	, Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");
	
КонецПроцедуры // ЗаполнитьПараметрыКаталогаПрофиля()

// Процедура заполняет массив описаний параметров COM-класса профиля безопасности
//
Процедура ЗаполнитьПараметрыCOMКлассаПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"			, "name");
	ДобавитьПараметрОписанияОбъекта("Описание"		, "descr"		, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ИмяФайла"		, "fileName"	, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ИдКласса"		, "id"			, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Компьютер"		, "host"		, "", "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыCOMКлассаПрофиля()

// Процедура заполняет массив описаний параметров внешней компоненты или модуля профиля безопасности
//
Процедура ЗаполнитьПараметрыКомпонентыМодуляПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"		, "name");
	ДобавитьПараметрОписанияОбъекта("Описание"	, "descr"	, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Хэш"		, "hash", , "Чтение, Добавление, Изменение");
	
КонецПроцедуры // ЗаполнитьПараметрыКомпонентыМодуляПрофиля()

// Процедура заполняет массив описаний параметров разрешенного приложения профиля безопасности
//
Процедура ЗаполнитьПараметрыПриложенияПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"		, "name");
	ДобавитьПараметрОписанияОбъекта("Описание"	, "descr"	, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Маска"		, "wild"	, "*", "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыПриложенияПрофиля()

// Процедура заполняет массив описаний параметров интернет ресурса профиля безопасности
//
Процедура ЗаполнитьПараметрыИнтернетРесурсаПрофиля() Экспорт

	ДобавитьПараметрОписанияОбъекта("Имя"			, "name");
	ДобавитьПараметрОписанияОбъекта("Описание"		, "descr"		, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("Протокол"		, "protocol"	, "", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("АдресРесурса"	, "url"			, "http", "Чтение, Добавление, Изменение");
	ДобавитьПараметрОписанияОбъекта("ПортСервера"	, "port"		, "", "Чтение, Добавление, Изменение");

КонецПроцедуры // ЗаполнитьПараметрыИнтернетРесурсаПрофиля()

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
