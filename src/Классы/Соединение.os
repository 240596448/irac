Перем Объект_Ид;
Перем Объект_Параметры;
Перем ПараметрыОбъекта;

Перем Кластер_Агент;
Перем Кластер_Владелец;
Перем Процесс_Владелец;
Перем ИБ_Владелец;

Перем ПериодОбновления;
Перем МоментАктуальности;

Перем Лог;

Процедура ПриСозданииОбъекта(АгентКластера, Кластер, Процесс, ИБ, Соединение)
	
	Кластер_Агент = АгентКластера;
	Кластер_Владелец = Кластер;
	ИБ_Владелец = ИБ;
	Процесс_Владелец = Процесс;
	
	ПараметрыОбъекта = Новый ПараметрыОбъекта("connection");

	Если ТипЗнч(Соединение) = Тип("Соответствие") Тогда
		Объект_Ид = Соединение["connection"];
		Служебный.ЗаполнитьПараметрыОбъекта(ЭтотОбъект, Объект_Параметры, Соединение);
		МоментАктуальности = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Иначе
		Объект_Ид = Соединение;
		МоментАктуальности = 0;
	КонецЕсли;
	
	ПериодОбновления = 60000;
	
КонецПроцедуры // ПриСозданииОбъекта()

Процедура ОбновитьДанные(ОбновитьПринудительно = Ложь) Экспорт
	
	Если Служебный.ТребуетсяОбновление(Объект_Параметры,
		МоментАктуальности, ПериодОбновления, ОбновитьПринудительно) Тогда

		ОбновитьДанныеОбъекта();

	КонецЕсли;
	
	МоментАктуальности = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
КонецПроцедуры // ОбновитьДанные()

Процедура ОбновитьДанныеОбъекта() Экспорт
	
	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("connection");
	ПараметрыЗапуска.Добавить("list");

	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Кластер_Владелец.СтрокаАвторизации());

	Если НЕ Процесс_Владелец = Неопределено Тогда
		ПараметрыЗапуска.Добавить(СтрШаблон("--process=%1", Процесс_Владелец.Получить("process")));
	КонецЕсли;

	Если НЕ ИБ_Владелец = Неопределено Тогда
		ПараметрыЗапуска.Добавить(СтрШаблон("--infobase=%1", ИБ_Владелец.Ид()));
		ПараметрыЗапуска.Добавить(СтрШаблон(ИБ_Владелец.СтрокаАвторизации()));
	КонецЕсли;

	Кластер_Агент.ВыполнитьКоманду(ПараметрыЗапуска);
	
	МассивРезультатов = Кластер_Агент.ВыводКоманды();

	Если МассивРезультатов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Служебный.ЗаполнитьПараметрыОбъекта(ЭтотОбъект, Объект_Параметры, МассивРезультатов[0]);

КонецПроцедуры // ОбновитьДанныеОбъекта()

Функция ПараметрыОбъекта(ИмяПоляКлюча = "ИмяПараметра") Экспорт
	
	Возврат ПараметрыОбъекта.Получить(ИмяПоляКлюча);

КонецФункции // ПараметрыОбъекта()

Функция Ид() Экспорт
	
	Возврат Объект_Ид;
	
КонецФункции // Ид()

Функция Получить(ИмяПоля, ОбновитьПринудительно = Ложь) Экспорт
	
	ОбновитьДанные(ОбновитьПринудительно);

	Если НЕ Найти(ВРег("Ид, process"), ВРег(ИмяПоля)) = 0 Тогда
		Возврат Объект_Ид;
	КонецЕсли;
	
	ЗначениеПоля = Объект_Параметры.Получить(ИмяПоля);

	Если ЗначениеПоля = Неопределено Тогда
		
		ОписаниеПараметра = ПараметрыОбъекта("ИмяПоляРАК").Получить(ИмяПоля);

		Если НЕ ОписаниеПараметра = Неопределено Тогда
			ЗначениеПоля = Объект_Параметры.Получить(ОписаниеПараметра["ИмяПараметра"]);
		КонецЕсли;
	КонецЕсли;

	Возврат ЗначениеПоля;

КонецФункции // Получить()

Процедура Отключить() Экспорт

	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("connection");
	ПараметрыЗапуска.Добавить("list");

	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Кластер_Владелец.СтрокаАвторизации());

	Если НЕ Процесс_Владелец = Неопределено Тогда
		ПараметрыЗапуска.Добавить(СтрШаблон("--process=%1", Процесс_Владелец.Получить("process")));
	КонецЕсли;

	ОтборИБ = Новый Соответствие();
	ОтборИБ.Вставить("infobase", ИБ_Владелец.Ид());

	СписокИБ = Кластер_Владелец.ИнформационныеБазы().Список(ОтборИБ);
	Если НЕ СписокИБ.Количество() = 0 Тогда
		ПараметрыЗапуска.Добавить(СтрШаблон(СписокИБ[0].СтрокаАвторизации()));
	КонецЕсли;

	Кластер_Агент.ВыполнитьКоманду(ПараметрыЗапуска);

	Лог.Отладка(Кластер_Агент.ВыводКоманды(Ложь));

	ОбновитьДанные(Истина);
	
КонецПроцедуры // Отключить()

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");