Перем Кластер_Агент;
Перем Кластер_Владелец;
Перем Элементы;
Перем Лог;

// Конструктор
//   
// Параметры:
//   АгентКластера		- АгентКластера	- ссылка на родительский объект агента кластера
//   Кластер			- Кластер		- ссылка на родительский объект кластера
//
Процедура ПриСозданииОбъекта(АгентКластера, Кластер)

	Кластер_Агент = АгентКластера;
	Кластер_Владелец = Кластер;

	ОбновитьДанные();

КонецПроцедуры

// Процедура получает данные от сервиса администрирования кластера 1С
// и сохраняет в локальных переменных
//   
Процедура ОбновитьДанные()
	
	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("server");
	ПараметрыЗапуска.Добавить("list");

	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Кластер_Владелец.СтрокаАвторизации());

	Служебный.ВыполнитьКоманду(ПараметрыЗапуска);
	
	МассивРезультатов = Служебный.РазобратьВыводКоманды(Служебный.ВыводКоманды());

	Элементы = Новый Соответствие();
	Для Каждого ТекОписание Из МассивРезультатов Цикл
		Элементы.Вставить(ТекОписание["name"], Новый Сервер(Кластер_Агент, Кластер_Владелец, ТекОписание["server"]));
	КонецЦикла;

КонецПроцедуры // ОбновитьДанные()

Функция ПолучитьСписок(ОбновитьДанные = Ложь) Экспорт

	Если ОбновитьДанные Тогда
		ОбновитьДанные();
	КонецЕсли;

	Возврат Элементы;

КонецФункции

Функция Получить(Имя, ОбновитьДанные = Ложь) Экспорт

	Если ОбновитьДанные Тогда
		ОбновитьДанные();
	КонецЕсли;

	Возврат Элементы[Имя];

КонецФункции

Процедура Добавить(Имя = "Центральный сервер", Сервер = "localhost", Порт = 1540, ПараметрыСервера) Экспорт

	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("server");
	ПараметрыЗапуска.Добавить("insert");

	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Кластер_Владелец.СтрокаАвторизации());

	ПараметрыЗапуска.Добавить(СтрШаблон("--agent-host=%1", Сервер));
	ПараметрыЗапуска.Добавить(СтрШаблон("--agent-port=%1", Порт));
	ПараметрыЗапуска.Добавить(СтрШаблон("--name=%1", Имя));

	ПараметрыЗапуска.Добавить(СтрШаблон("--port-range=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "ДиапазонПортов",
											  1560)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--using=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "ЦентральныйСервер",
											  ВариантыИспользованияРабочегоСервера.Главный)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--dedicate-managers=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "МенеджерПодКаждыйСервис",
											  ВариантыРазмещенияСервисов.ВОдномМенеджере)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--infobases-limit=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "КоличествоИБНаПроцесс",
											  8)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--memory-limit=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "МаксОбъемПамятиРабочихПроцессов",
											  0)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--connections-limit=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "КоличествоСоединенийНаПроцесс",
											  128)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--safe-working-processes-memory-limit=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "БезопасныйОбъемПамятиРабочихПроцессов",
											  0)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--safe-call-memory-limit=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "БезопасныйРасходПамятиЗаОдинВызов",
											  0)));
	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster-port=%1",
		Служебный.ПолучитьЗначениеИзСтруктуры(ПараметрыСервера,
											  "ПортГлавногоМенеджераКластера",
											  0)));

	Служебный.ВыполнитьКоманду(ПараметрыЗапуска);
	
	Лог.Информация(Служебный.ВыводКоманды());

	ОбновитьДанные();

КонецПроцедуры

Процедура Удалить(Имя) Экспорт
	
	ПараметрыЗапуска = Новый Массив();
	ПараметрыЗапуска.Добавить(Кластер_Агент.СтрокаПодключения());

	ПараметрыЗапуска.Добавить("server");
	ПараметрыЗапуска.Добавить("remove");

	ПараметрыЗапуска.Добавить(СтрШаблон("--server=%1", Получить(Имя).Ид()));

	ПараметрыЗапуска.Добавить(СтрШаблон("--cluster=%1", Кластер_Владелец.Ид()));
	ПараметрыЗапуска.Добавить(Получить(Имя).СтрокаАвторизации());
	
	Служебный.ВыполнитьКоманду(ПараметрыЗапуска);
	
	Лог.Информация(Служебный.ВыводКоманды());

	ОбновитьДанные();

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
