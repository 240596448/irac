Перем мСервер;
Перем мПорт;
Перем мВерсия;
Перем мПутьКПлатформе1С;
Перем мАдминистраторы;
Перем мАдминистратор;
Перем мКластеры;
Перем Лог;

Процедура ПриСозданииОбъекта(Сервер = "localhost", Порт = 1545, Версия = "8.3", Администратор = "", ПарольАдминистратора = "")

	мСервер = Сервер;
	мПорт = Порт;
	
	мПутьКПлатформе1С = Служебный.ПолучитьПутьКВерсииПлатформы(Версия);
	мВерсия = Служебный.ВерсияПлатформы(мПутьКПлатформе1С);
	
	Если ЗначениеЗаполнено(Администратор) Тогда
		мАдминистратор = Новый Структура("Администратор, Пароль", Администратор, ПарольАдминистратора)
	Иначе
		мАдминистратор = Неопределено;
	КонецЕсли;
	
	мАдминистраторы = Администраторы(Истина);
	мКластеры = Кластеры(Истина);

КонецПроцедуры

Функция СтрокаПодключения() Экспорт

	Лог.Отладка("Сервер " + мСервер);
	Лог.Отладка("Порт <" + мПорт + ">");

	Сервер = "";
	Если Не ПустаяСтрока(мСервер) Тогда
		Сервер = мСервер;
		Если Не ПустаяСтрока(мПорт) Тогда
			Сервер = Сервер + ":" + мПорт;
		КонецЕсли;
	КонецЕсли;
			
	Возврат Сервер;

КонецФункции

Функция СтрокаАвторизации() Экспорт
	
	Если НЕ ТипЗнч(мАдминистратор)  = Тип("Структура") Тогда
		Возврат "";
	КонецЕсли;

	Если НЕ мАдминистратор.Свойство("Администратор") Тогда
		Возврат "";
	КонецЕсли;

	Лог.Отладка("Администратор " + мАдминистратор.Администратор);
	Лог.Отладка("Пароль <***>");

	СтрокаАвторизации = "";
	Если Не ПустаяСтрока(мАдминистратор.Администратор) Тогда
		СтрокаАвторизации = СтрШаблон("--agent-user=%1 --agent-pwd=%2", мАдминистратор.Администратор, мАдминистратор.Пароль);
	КонецЕсли;
			
	Возврат СтрокаАвторизации;
	
КонецФункции
	
Процедура УстановитьАдминистратора(Администратор, Пароль) Экспорт

	мАдминистратор = Новый Структура("Администратор, Пароль", Администратор, Пароль);

КонецПроцедуры

Функция ПараметрыАгента() Экспорт
	Возврат СокрЛП(мСервер) + ":" + Формат(мПорт, "ЧГ=") + "(v." + СокрЛП(мВерсия) + ")";
КонецФункции

Функция Администраторы(ОбновитьДанные = Ложь) Экспорт

	Если ОбновитьДанные Тогда
		мАдминистраторы = Новый АдминистраторыАгента(ЭтотОбъект);
	КонецЕсли;

	Возврат мАдминистраторы;

КонецФункции

Функция Администратор() Экспорт
	Возврат мАдминистратор;
КонецФункции

Функция Кластеры(ОбновитьДанные = Ложь) Экспорт

	Если ОбновитьДанные Тогда
		мКластеры = Новый Кластеры(ЭтотОбъект);
	КонецЕсли;

	Возврат мКластеры;

КонецФункции	

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
