// Класс хранящий структуру свойств и команд объекта указанного типа

Перем ТипОбъекта;                  // наименование типа объектов (Кластер, Сервер, ИБ и т.п.)
Перем ОписаниеСвойств;             // структура описания свойств объекта
Перем ОписаниеКоманд;              // структура описания команд объекта
Перем ПолучениеПараметровОбъектов; // структура описания методов заполнения списка свойств и команд объекта
Перем ПараметрыЗапуска;            // массив параметров запуска команды утилиты RAC
Перем ЗначенияПараметров;          // значения именованых параметров объекта

Перем Лог;

#Область ПрограммныйИнтерфейс

// Конструктор
//   
// Параметры:
//   ИмяТипаОбъекта                 - Строка        - имя типа объекта для которого создается структура параметров
//   ЗначенияПараметровКоманд       - Структура     - список параметров команд:
//                                                       Ключ - имя параметра
//                                                       Значение - значение параметра
//
Процедура ПриСозданииОбъекта(ИмяТипаОбъекта, ЗначенияПараметровКоманд = Неопределено)

	ТипОбъекта = ТипыОбъектовКластера.ТипОбъекта(ИмяТипаОбъекта);

	ОписаниеСвойств = ТипыОбъектовКластера.СвойстваОбъекта(ИмяТипаОбъекта);

	ОписаниеКоманд = ТипыОбъектовКластера.КомандыОбъекта(ИмяТипаОбъекта);

	ЗаполнитьПолучениеПараметровОбъекта();

	УстановитьЗначенияПараметровКоманд(ЗначенияПараметровКоманд);

КонецПроцедуры // ПриСозданииОбъекта()

// Процедура устанавливает значения параметров команд
//   
// Параметры:
//   ЗначенияПараметровКоманд       - Структура     - список параметров команд:
//       *<имя параметра>           - Произвольный  - значение параметра команды
//   Очистить                       - Булево        - Истина - очистить значения параметров перед заполнением
//                                                    Ложь - добавить параметры к существующим
//                                                          (одноименные будут перезаполнены)
//
Процедура УстановитьЗначенияПараметровКоманд(Знач ЗначенияПараметровКоманд, Знач Очистить = Ложь) Экспорт

	Если НЕ ТипЗнч(ЗначенияПараметров) = Тип("Соответствие") ИЛИ Очистить Тогда
		ЗначенияПараметров = Новый Соответствие();
	КонецЕсли;

	Если ТипЗнч(ЗначенияПараметровКоманд) = Тип("Соответствие") Тогда
		Для Каждого ТекЭлемент Из ЗначенияПараметровКоманд Цикл
			ЗначенияПараметров.Вставить(ТекЭлемент.Ключ, ТекЭлемент.Значение);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры // УстановитьЗначенияПараметровКоманд()

// Функция возвращает коллекцию описаний свойств объекта
//   
// Параметры:
//   ИмяПоляКлюча         - Строка    - имя поля, значение которого будет использовано
//                                      в качестве ключа возвращаемого соответствия
//   
// Возвращаемое значение:
//    Соответствие - коллекция описаний свойств объекта, для получения/изменения значений
//
Функция ОписаниеСвойств(Знач ИмяПоляКлюча = "Имя") Экспорт
	
	СтруктураОписаний = Новый Соответствие();

	Если НЕ ТипЗнч(ОписаниеСвойств) = Тип("Массив") Тогда
		Возврат СтруктураОписаний;
	КонецЕсли;

	Для Каждого ТекОписание Из ОписаниеСвойств Цикл
		СтруктураОписаний.Вставить(ТекОписание[ИмяПоляКлюча], ТекОписание);
	КонецЦикла;

	Возврат СтруктураОписаний;

КонецФункции // ОписаниеСвойств()

// Функция выполняет заполнение массива параметров запуска команды
// и возвращает результирующий массив
//   
// Параметры:
//   ИмяКоманды         - Строка    - имя команды для которой выпоняется заполнение
//   
// Возвращаемое значение:
//    Массив - параметры запуска команды
//
Функция ПараметрыКоманды(Знач ИмяКоманды) Экспорт
	
	Если ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска.Очистить();
	КонецЕсли;

	Попытка
		ПроцедураЗаполнения = ПолучениеПараметровОбъектов[ВРег(ТипОбъекта.Имя)]["Команды"][ВРег(ИмяКоманды)]["Параметры"];
	Исключение
		ВызватьИсключение СтрШаблон("Неудачная попытка получения параметров команды ""%1"" объекта ""%2"": %3",
									ИмяКоманды,
									ТипОбъекта.Имя,
									ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

	Если НЕ ПроцедураЗаполнения = Неопределено Тогда
		Рефлектор = Новый Рефлектор();
		Попытка
			Рефлектор.ВызватьМетод(ЭтотОбъект, ПроцедураЗаполнения, Новый Массив());
		Исключение
			ВызватьИсключение
				СтрШаблон("Ошибка вызова метода получения параметров команды ""%1"" объекта ""%2"" (%3()): %4 %5",
	                      ИмяКоманды,
	                      ТипОбъекта.Имя,
	                      ПроцедураЗаполнения,
	                      Символы.ПС,
	                      ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЕсли;

	Возврат ПараметрыЗапуска;

КонецФункции // ПараметрыКоманды()

// Функция возвращает текущий тип объекта
//   
Функция ТипОбъекта() Экспорт

	Возврат ТипОбъекта;

КонецФункции // ТипОбъекта()

#КонецОбласти // ПрограммныйИнтерфейс

#Область ПроцедурыЗаполненияПараметровОбъектов

Процедура Параметры_Общая(Знач ИмяКоманды)

	Команда = ОписаниеКоманд[ИмяКоманды];

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	Если ТипОбъекта.Свойство("Владелец") Тогда
		ДобавитьПараметрСтроку(ТипОбъекта.Владелец.РежимАдминистрирования);
	Иначе
		ДобавитьПараметрСтроку(ТипОбъекта.РежимАдминистрирования);
	КонецЕсли;

	АвторизацияАгента = Ложь;
	Если Команда.Свойство("АвторизацияАгента") Тогда
		АвторизацияАгента = Команда.АвторизацияАгента;
	КонецЕсли;
	
	Если АвторизацияАгента Тогда
	 	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");
	КонецЕсли;

	Если Команда.Кластер Тогда
	 	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	 	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");
	КонецЕсли;
	
	Если ТипОбъекта.Свойство("Владелец") Тогда
		ДобавитьПараметрСтроку(ТипОбъекта.РежимАдминистрирования);
	КонецЕсли;

	Для Каждого ТекПараметр Из Команда.ОбщиеПараметры Цикл
		ДобавитьДополнительныйПараметрКоманды(ТекПараметр);
	КонецЦикла;

	ДобавитьПараметрСтроку(Команда.ИмяРАК);

	Для Каждого ТекПараметр Из Команда.ПараметрыКоманды Цикл
		ДобавитьДополнительныйПараметрКоманды(ТекПараметр);
	КонецЦикла;

	Если Команда.ЗначенияПолей Тогда
		ДобавитьПрочиеПараметрыКоманды(Команда.Имя);
	КонецЕсли;

КонецПроцедуры // 

Процедура ДобавитьДополнительныйПараметрКоманды(Параметр)

	Флаг = Истина;
	Если ТекПараметр.Свойство("Флаг") Тогда
		Флаг = ЗначениеФлага(ТекПараметр.Флаг);
	КонецЕсли;

	Если НЕ Флаг Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ТекПараметр) = Тип("Структура") Тогда
		Обязательный = Ложь;
		Если ТекПараметр.Свойство("Обязательный") Тогда
			Обязательный = ТекПараметр.Обязательный;
		КонецЕсли;

		Если ТекПараметр.Свойство("Шаблон") Тогда
			ДобавитьПараметрПоШаблону(ТекПараметр.Шаблон, ТекПараметр.Параметр, ТекПараметр.Обязательный);
		Иначе
			ДобавитьПараметрПоИмени(ТекПараметр.Параметр);
		КонецЕсли;

	Иначе
		ДобавитьПараметрСтроку(ТекПараметр);
	КонецЕсли;

КонецПроцедуры // ДобавитьДополнительныйПараметрКоманды()

#Область Кластеры

// Процедура заполняет параметры запуска команды получения списка кластеров
//
Процедура Параметры_Кластер_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Кластер_Список()

// Процедура заполняет параметры запуска команды получения описания кластера
//
Процедура Параметры_Кластер_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);

КонецПроцедуры // Параметры_Кластер_Описание()

// Процедура заполняет параметры запуска команды добавления кластера
//
Процедура Параметры_Кластер_Добавить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("insert");
	
	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");

	ДобавитьПараметрПоШаблону("--host=%1", "АдресСервера");
	ДобавитьПараметрПоШаблону("--port=%1", "ПортСервера");
	ДобавитьПараметрПоШаблону("--name=%1", "Имя");

	ДобавитьПрочиеПараметрыКоманды("Добавление");

КонецПроцедуры // Параметры_Кластер_Добавить()

// Процедура заполняет параметры запуска команды изменения кластера
//
Процедура Параметры_Кластер_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);

	ДобавитьПараметрПоШаблону("--name=%1", "Имя");
	
	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Кластер_Изменить()

// Процедура заполняет параметры запуска команды удаления кластера
//
Процедура Параметры_Кластер_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);

	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_Кластер_Удалить()

#КонецОбласти // Кластеры

#Область АдминистраторыАгента

// Процедура заполняет параметры запуска команды получения списка администраторов агента
//
Процедура Параметры_Агент_Администратор_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Агент);

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");
	
	ДобавитьПараметрСтроку("admin");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Агент_Администратор_Список()

// Процедура заполняет параметры запуска команды добавления администратора агента
//
Процедура Параметры_Агент_Администратор_Добавить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Агент);

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");
	
	ДобавитьПараметрСтроку("admin");

	ДобавитьПараметрСтроку("register");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));

	ДобавитьПрочиеПараметрыКоманды("Добавление", , "Имя");

КонецПроцедуры // Параметры_Агент_Администратор_Добавить()

// Процедура заполняет параметры запуска команды удаления администратора агента
//
Процедура Параметры_Агент_Администратор_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Агент);

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");
	
	ДобавитьПараметрСтроку("admin");

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));
	
КонецПроцедуры // Параметры_Агент_Администратор_Удалить()

#КонецОбласти // АдминистраторыАгента

#Область АдминистраторыКластера

// Процедура заполняет параметры запуска команды получения списка администраторов кластера
//
Процедура Параметры_Кластер_Администратор_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("admin");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Кластер_Администратор_Список()

// Процедура заполняет параметры запуска команды добавления администратора кластера
//
Процедура Параметры_Кластер_Администратор_Добавить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("admin");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("register");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));

	ДобавитьПрочиеПараметрыКоманды("Добавление", , "Имя");

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");

КонецПроцедуры // Параметры_Кластер_Администратор_Добавить()

// Процедура заполняет параметры запуска команды удаления администратора кластера
//
Процедура Параметры_Кластер_Администратор_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("admin");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));
	
КонецПроцедуры // Параметры_Кластер_Администратор_Удалить()

#КонецОбласти // АдминистраторыКластера

#Область МенеджерыКластера

// Процедура заполняет параметры запуска команды получения списка менеджеров кластера
//
Процедура Параметры_МенеджерКластера_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Менеджеры);
	ДобавитьПараметрСтроку("list");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);

	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_МенеджерКластера_Список()

#КонецОбласти // МенеджерыКластера

#Область Серверы

// Процедура заполняет параметры команды получения списка серверов
//
Процедура Параметры_Сервер_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Серверы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Сервер_Список()

// Процедура заполняет параметры команды получения описания сервера
//
Процедура Параметры_Сервер_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Серверы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);

КонецПроцедуры // Параметры_Сервер_Описание()

// Процедура заполняет параметры команды добавления сервера
//
Процедура Параметры_Сервер_Добавить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Серверы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("insert");
	
	ДобавитьПараметрПоШаблону("--name=%1"  , "Имя", Истина);
	ДобавитьПараметрПоШаблону("--locale=%1", "Локализация");
	
	ДобавитьПрочиеПараметрыКоманды("Добавление", , "Имя");

КонецПроцедуры // Параметры_Сервер_Добавить()

// Процедура заполняет параметры команды изменения сервера
//
Процедура Параметры_Сервер_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Серверы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Сервер_Изменить()

// Процедура заполняет параметры команды удаления сервера
//
Процедура Параметры_Сервер_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Серверы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);

КонецПроцедуры // Параметры_Сервер_Удалить()

#КонецОбласти // Серверы

#Область РабочиеПроцессы

// Процедура заполняет параметры команды получения списка рабочих процессов
//
Процедура Параметры_РабочийПроцесс_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.РабочиеПроцессы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_РабочийПроцесс_Список()

// Процедура заполняет параметры команды получения описания рабочего процесса
//
Процедура Параметры_РабочийПроцесс_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.РабочиеПроцессы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--process=%1", "ИдентификаторПроцесса", Истина);

КонецПроцедуры // Параметры_РабочийПроцесс_Описание()

#КонецОбласти // РабочиеПроцессы

#Область ИнформационныеБазы

// Процедура заполняет параметры команды получения списка информационных баз
//
Процедура Параметры_ИБ_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ИБ);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("summary");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ИБ_Список()

// Процедура заполняет параметры команды получения сокращенного описания информационной базы
//
Процедура Параметры_ИБ_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ИБ);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("summary");
	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ", Истина);

КонецПроцедуры // Параметры_ИБ_Описание()

// Процедура заполняет параметры команды получения полного описания информационной базы
//
Процедура Параметры_ИБ_ПолноеОписание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ИБ);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

КонецПроцедуры // Параметры_ИБ_ПолноеОписание()

// Процедура заполняет параметры команды добавления информационной базы
//
Процедура Параметры_ИБ_Добавить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ИБ);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("create");
	
	ДобавитьПараметрПоШаблону("--name=%1"  , "Имя", Истина);
	ДобавитьПараметрПоШаблону("--locale=%1", "Локализация");
	
	Если ЗначениеФлага("СоздатьБазуСУБД") Тогда
		ДобавитьПараметрСтроку("--create-database");
	КонецЕсли;

	ДобавитьПрочиеПараметрыКоманды("Добавление");

КонецПроцедуры // Параметры_ИБ_Добавить()

// Процедура заполняет параметры команды изменения информационной базы
//
Процедура Параметры_ИБ_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ИБ);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ИБ_Изменить()

// Процедура заполняет параметры команды удаления информационной базы
//
Процедура Параметры_ИБ_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ИБ);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("drop");

	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

	Если ЗначенияПараметров.Получить("ДействияСБазойСУБД") = Перечисления.ДействияСБазойСУБДПриУдалении.Удалить Тогда
		ДобавитьПараметрСтроку("--drop-database");
	ИначеЕсли ЗначенияПараметров.Получить("ДействияСБазойСУБД") = Перечисления.ДействияСБазойСУБДПриУдалении.Очистить Тогда
		ДобавитьПараметрСтроку("--clear-database");
	КонецЕсли;

КонецПроцедуры // Параметры_ИБ_Удалить()

#КонецОбласти // ИнформационныеБазы

#Область Сеансы

// Процедура заполняет параметры команды получения списка сеансов
//
Процедура Параметры_Сеанс_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сеансы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");

КонецПроцедуры // Параметры_Сеанс_Список()

// Процедура заполняет параметры команды получения описания сеанса
//
Процедура Параметры_Сеанс_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сеансы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--session=%1", "ИдентификаторСеанса", Истина);

КонецПроцедуры // Параметры_Сеанс_Описание()

// Процедура заполняет параметры команды удаления сеанса
//
Процедура Параметры_Сеанс_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сеансы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("terminate");

	ДобавитьПараметрПоШаблону("--session=%1", "ИдентификаторСеанса", Истина);

КонецПроцедуры // Параметры_Сеанс_Удалить()

#КонецОбласти // Сеансы

#Область Лицензии

// Процедура заполняет параметры команды получения списка лицензий рабочих процессов
//
Процедура Параметры_РабочийПроцесс_Лицензия_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.РабочиеПроцессы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрСтроку("--license");

КонецПроцедуры // Параметры_РабочийПроцесс_Лицензия_Список()

// Процедура заполняет параметры команды получения списка лицензий рабочего процесса
//
Процедура Параметры_РабочийПроцесс_Лицензия_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.РабочиеПроцессы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрСтроку("--license");
	ДобавитьПараметрПоШаблону("--process=%1", "ИдентификаторПроцесса", Истина);

КонецПроцедуры // Параметры_РабочийПроцесс_Лицензия_Описание()

// Процедура заполняет параметры команды получения списка лицензий сеансов
//
Процедура Параметры_Сеанс_Лицензия_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сеансы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрСтроку("--license");

КонецПроцедуры // Параметры_Сеанс_Лицензия_Список()

// Процедура заполняет параметры команды получения списка лицензий сеанса
//
Процедура Параметры_Сеанс_Лицензия_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сеансы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрСтроку("--license");
	ДобавитьПараметрПоШаблону("--session=%1", "ИдентификаторСеанса", Истина);

КонецПроцедуры // Параметры_Сеанс_Лицензия_Описание()

#КонецОбласти // Лицензии

#Область Соединения

// Процедура заполняет параметры команды получения списка соединений
//
Процедура Параметры_Соединение_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Соединения);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--process=%1" , "ИдентификаторПроцесса");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

КонецПроцедуры // Параметры_Соединение_Список()

// Процедура заполняет параметры команды получения параметров соединения
//
Процедура Параметры_Соединение_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Соединения);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--connection=%1", "ИдентификаторСоединения", Истина);

КонецПроцедуры // Параметры_Соединение_Описание()

// Процедура заполняет параметры команды получения отключения соединения
//
Процедура Параметры_Соединение_Отключить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Соединения);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("disconnect");
	ДобавитьПараметрПоШаблону("--process=%1"   , "ИдентификаторПроцесса", Истина);
	ДобавитьПараметрПоШаблону("--connection=%1", "ИдентификаторСоединения", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

КонецПроцедуры // Параметры_Соединение_Отключить()

#КонецОбласти // Соединения

#Область Блокировки

// Процедура заполняет параметры команды получения списка блокировок
//
Процедура Параметры_Блокировка_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Блокировки);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--infobase=%1"  , "ИдентификаторИБ");
	ДобавитьПараметрПоШаблону("--connection=%1", "ИдентификаторСоединения");
	ДобавитьПараметрПоШаблону("--session=%1"   , "ИдентификаторСеанса");

КонецПроцедуры // Параметры_Блокировка_Список()

#КонецОбласти // Блокировки

#Область Сервисы

// Процедура заполняет параметры команды получения списка сервисов
//
Процедура Параметры_Сервис_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сервисы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Сервис_Список()

#КонецОбласти // Сервисы

#Область ТребованияНазначенияФункциональности

// Процедура заполняет параметры команды получения списка требований назначения функциональности
//
Процедура Параметры_НазначениеФункциональности_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.НазначенияФункциональности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);

КонецПроцедуры // Параметры_НазначениеФункциональности_Список()

// Процедура заполняет параметры команды получения описания требования назначения функциональности
//
Процедура Параметры_НазначениеФункциональности_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.НазначенияФункциональности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--rule=%1"  , "ИдентификаторТребования", Истина);

КонецПроцедуры // Параметры_НазначениеФункциональности_Описание()

// Процедура заполняет параметры команды добавления требования назначения функциональности
//
Процедура Параметры_НазначениеФункциональности_Добавить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.НазначенияФункциональности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("insert");
	
	ДобавитьПараметрПоШаблону("--server=%1"  , "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--position=%1", "Позиция", Истина);
	
	ДобавитьПрочиеПараметрыКоманды("Добавление");

КонецПроцедуры // Параметры_НазначениеФункциональности_Добавить()

// Процедура заполняет параметры команды изменения требования назначения функциональности
//
Процедура Параметры_НазначениеФункциональности_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.НазначенияФункциональности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--server=%1"  , "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--position=%1", "Позиция", Истина);
	ДобавитьПараметрПоШаблону("--rule=%1"    , "ИдентификаторТребования", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_НазначениеФункциональности_Изменить()

// Процедура заполняет параметры команды удаления требования назначения функциональности
//
Процедура Параметры_НазначениеФункциональности_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.НазначенияФункциональности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--rule=%1"  , "ИдентификаторТребования", Истина);

КонецПроцедуры // Параметры_НазначениеФункциональности_Удалить()

// Процедура заполняет параметры команды применения требований назначения функциональности
//
Процедура Параметры_НазначениеФункциональности_Применить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.НазначенияФункциональности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("apply");

	Если ЗначениеФлага("ПрименитьЧастично") Тогда
		ДобавитьПараметрСтроку("--partial");
	Иначе
		ДобавитьПараметрСтроку("--full");
	КонецЕсли;

КонецПроцедуры // Параметры_НазначениеФункциональности_Применить()

#КонецОбласти // ТребованияНазначенияФункциональности

#Область  ПрофилиБезопасности

// Процедура заполняет параметры команды получения списка профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ПрофильБезопасности_Список()

// Процедура заполняет параметры команды изменения профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_ИзменитьРежимДоступа() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);
	ДобавитьПараметрПоШаблону("--access=%1", "РежимДоступа", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_Изменить()

// Процедура заполняет параметры команды изменения профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ПрофильБезопасности_Изменить()

// Процедура заполняет параметры команды удаления профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_Удалить()

#Область ПрофилиБезопасности_Каталоги

// Процедура заполняет параметры команды получения списка разрешений
// для каталогов профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Каталог_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ПрофильБезопасности_Каталог_Список()

// Процедура заполняет параметры команды изменения разрешения
// для каталога профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Каталог_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--alias=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ПрофильБезопасности_Каталог_Изменить()

// Процедура заполняет параметры команды удаления каталога
// из списка разрешений профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Каталог_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--alias=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_Каталог_Удалить()

#КонецОбласти // ПрофилиБезопасности_Каталоги

#Область ПрофилиБезопасности_COMКлассы

// Процедура заполняет параметры команды получения списка разрешений
// для com-классов профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_COMКласс_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ПрофильБезопасности_COMКласс_Список()

// Процедура заполняет параметры команды изменения разрешения
// для com-класса профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_COMКласс_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ПрофильБезопасности_COMКласс_Изменить()

// Процедура заполняет параметры команды удаления com-класса
// из списка разрешений профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_COMКласс_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_COMКласс_Удалить()

#КонецОбласти // ПрофилиБезопасности_COMКлассы

#Область ПрофилиБезопасности_ВнешниеКомпоненты

// Процедура заполняет параметры команды получения списка разрешений
// для компонент профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_ВнешняяКомпонента_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ПрофильБезопасности_ВнешняяКомпонента_Список()

// Процедура заполняет параметры команды изменения разрешения
// для компонента профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_ВнешняяКомпонента_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ПрофильБезопасности_ВнешняяКомпонента_Изменить()

// Процедура заполняет параметры команды удаления компонента
// из списка разрешений профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_ВнешняяКомпонента_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_ВнешняяКомпонента_Удалить()

#КонецОбласти // ПрофилиБезопасности_ВнешниеКомпоненты

#Область ПрофилиБезопасности_Модули

// Процедура заполняет параметры команды получения списка разрешений
// для модулей профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Модуль_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ПрофильБезопасности_Модуль_Список()

// Процедура заполняет параметры команды изменения разрешения
// для модуля профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Модуль_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ПрофильБезопасности_Модуль_Изменить()

// Процедура заполняет параметры команды удаления модуля
// из списка разрешений профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Модуль_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_Модуль_Удалить()

#КонецОбласти // ПрофилиБезопасности_Модули

#Область ПрофилиБезопасности_Приложения

// Процедура заполняет параметры команды получения списка разрешений
// для приложений профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Приложение_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ПрофильБезопасности_Приложение_Список()

// Процедура заполняет параметры команды изменения разрешения
// для приложения профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Приложение_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ПрофильБезопасности_Приложение_Изменить()

// Процедура заполняет параметры команды удаления приложения
// из списка разрешений профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_Приложение_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_Приложение_Удалить()

#КонецОбласти // ПрофилиБезопасности_Приложения

#Область ПрофилиБезопасности_ИнтернетРесурсы

// Процедура заполняет параметры команды получения списка разрешений
// для интернет ресурсов профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_ИнтернетРесурс_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ПрофильБезопасности_ИнтернетРесурс_Список()

// Процедура заполняет параметры команды изменения разрешения
// для интернет ресурса профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_ИнтернетРесурс_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ПрофильБезопасности_ИнтернетРесурс_Изменить()

// Процедура заполняет параметры команды удаления интернет ресурса
// из списка разрешений профиля безопасности
//
Процедура Параметры_ПрофильБезопасности_ИнтернетРесурс_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_ПрофильБезопасности_ИнтернетРесурс_Удалить()

#КонецОбласти // ПрофилиБезопасности_ИнтернетРесурсы

#КонецОбласти // ПрофилиБезопасности

#Область СчетчикиПотребленияРесурсов

// Процедура заполняет параметры команды получения списка счетчиков потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.СчетчикиРесурсов);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_СчетчикРесурсов_Список()

// Процедура заполняет параметры команды изменения счетчика потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Изменить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.СчетчикиРесурсов);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1"           , "ИмяСчетчика"      , Истина);
	ДобавитьПараметрПоШаблону("--collection-time=%1", "ДлительностьСбора", Истина);
	ДобавитьПараметрПоШаблону("--group=%1"          , "Группировка"      , Истина);
	ДобавитьПараметрПоШаблону("--filter-type=%1"    , "ТипОтбора"        , Истина);
	ДобавитьПараметрПоШаблону("--filter=%1"         , "Отбор"            , Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_СчетчикРесурсов_Изменить()

// Процедура заполняет параметры команды получения описания счетчика потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Описание() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.СчетчикиРесурсов);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--counter=%1", "ИдентификаторСчетчика", Истина);

КонецПроцедуры // Параметры_СчетчикРесурсов_Описание()

// Процедура заполняет параметры команды получения значений счетчика потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Значения_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.СчетчикиРесурсов);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("values");

	ДобавитьПараметрПоШаблону("--counter=%1", "ИмяСчетчика", Истина);
	ДобавитьПараметрПоШаблону("--object=%1" , "Отбор");
	
КонецПроцедуры // Параметры_СчетчикРесурсов_Значения_Список()

// Процедура заполняет параметры команды удаления счетчика потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Удалить() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.СчетчикиРесурсов);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяСчетчика", Истина);

КонецПроцедуры // Параметры_СчетчикРесурсов_Удалить()

#КонецОбласти // СчетчикиПотребленияРесурсов

#КонецОбласти // ПроцедурыЗаполненияПараметровОбъектов

#Область СлужебныеПроцедуры

// Процедура заполняет структуру правил заполнения описаний свойств и команд объектов
//
Процедура ЗаполнитьПолучениеПараметровОбъекта()

	ПолучениеПараметровКоманд = Новый Соответствие();

	Для Каждого ТекКоманда Из ОписаниеКоманд Цикл

		ИмяПроцедуры = "Параметры_" + СтрЗаменить(ТипОбъекта.Имя, ".", "_") + "_" + ТекКоманда.Ключ;

		ПолучениеПараметровКоманды = Новый Соответствие();
		ПолучениеПараметровКоманды.Вставить("ИмяКоманды", ТекКоманда.Ключ);
		ПолучениеПараметровКоманды.Вставить("Параметры", ИмяПроцедуры);

		ПолучениеПараметровКоманд.Вставить(ВРег(СокрЛП(ТекКоманда.Ключ)), ПолучениеПараметровКоманды);
		ПолучениеПараметровКоманд.Вставить(ВРег(СокрЛП(ТекКоманда.Значение)), ПолучениеПараметровКоманды);
	КонецЦикла;

	ПолучениеПараметровОбъекта = Новый Соответствие();
	ПолучениеПараметровОбъекта.Вставить("ИмяТипа", ТипОбъекта.Имя);
	ПолучениеПараметровОбъекта.Вставить("Команды", ПолучениеПараметровКоманд);

	ПолучениеПараметровОбъектов = Новый Соответствие();
	ПолучениеПараметровОбъектов.Вставить(ВРег(ТипОбъекта.Имя), ПолучениеПараметровОбъекта);

КонецПроцедуры // ЗаполнитьПолучениеПараметровОбъекта()

// Процедура добавляет параметры команды из описания свойств объекта
// проверяя флаг использования свойства для различных операций
//   
// Параметры:
//   ИмяФлагаРазрешения           - Строка          - имя проверяемого флага разрешения
//                                                 (Чтение, Добавление, Изменение и т.п.)
//   ВключаяПараметры           - Строка          - список добавляемых параметров, разделенных ","
//   ИсключаяПараметры           - Строка          - список исключаемых параметров, разделенных ","
//   
Процедура ДобавитьПрочиеПараметрыКоманды(Знач ИмяФлагаРазрешения
	                                   , Знач ВключаяПараметры = ""
	                                   , Знач ИсключаяПараметры = "")

	Если ЗначениеЗаполнено(ВключаяПараметры) Тогда
		ВключаяПараметры = СтрРазделить(ВключаяПараметры, ",", Ложь);
		Для й = 0 По ВключаяПараметры.ВГраница() Цикл
			ВключаяПараметры[й] = СокрЛП(ВключаяПараметры[й]);
		КонецЦикла;
	Иначе
		ВключаяПараметры = Новый Массив();
	КонецЕсли;

	ИсключаяПараметры = СтрРазделить(ИсключаяПараметры, ",", Ложь);
	Для й = 0 По ИсключаяПараметры.ВГраница() Цикл
		ИсключаяПараметры[й] = СокрЛП(ИсключаяПараметры[й]);
	КонецЦикла;

	ВсеПараметры = ОписаниеСвойств();

	Для Каждого ТекЭлемент Из ВсеПараметры Цикл
		Если ВключаяПараметры.Количество() > 0 Тогда
			Если ВключаяПараметры.Найти(ТекЭлемент.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		Если ИсключаяПараметры.Количество() > 0 Тогда
			Если НЕ ИсключаяПараметры.Найти(ТекЭлемент.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	    
		Если НЕ ТекЭлемент.Значение[ИмяФлагаРазрешения] Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначенияПараметров.Получить(ТекЭлемент.Ключ) = Неопределено Тогда
			Если ЗначениеЗаполнено(ТекЭлемент.Значение.ПоУмолчанию) Тогда
				ЗначенияПараметров.Вставить(ТекЭлемент.Ключ, ТекЭлемент.Значение.ПоУмолчанию);
			КонецЕсли;
		КонецЕсли;
		ДобавитьПараметрПоШаблону(ТекЭлемент.Значение.ПараметрКоманды + "=%1", ТекЭлемент.Ключ);
	КонецЦикла;

КонецПроцедуры // ДобавитьПрочиеПараметрыКоманды()

// Процедура добавляет переданное значение в массив параметров запуска команды
//   
// Параметры:
//   Параметр                - Строка           - добавляемое значение
//   Обязательный           - Булево            - Истина - если параметр не заполнен будет выдано исключение
//   ДобавлятьПустой        - Булево            - Истина - если параметр не заполнен будет добавлена пустая строка
//   
Процедура ДобавитьПараметрСтроку(Знач Параметр, Обязательный = Ложь, ДобавлятьПустой = Истина)

	Если НЕ ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска = Новый Массив();
	КонецЕсли;
	
	Если НЕ ТипЗнч(Параметр) = Тип("Строка") Тогда
		Параметр = "";
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Параметр) И Обязательный Тогда
		ВызватьИсключение "Не заполнен обязательный параметр!";
	КонецЕсли;

	Если ЗначениеЗаполнено(Параметр) ИЛИ ДобавлятьПустой Тогда
		ПараметрыЗапуска.Добавить(Параметр);
	КонецЕсли;

КонецПроцедуры // ДобавитьПараметрСтроку()

// Процедура добавляет значение параметра из структуры значений параметров в массив параметров запуска команды
//   
// Параметры:
//   Имя                    - Строка            - имя параметра в структуре значений параметров
//   Обязательный           - Булево            - Истина - если значение параметра не найдено
//                                                         или не заполнено будет выдано исключение
//   ДобавлятьПустой        - Булево            - Истина - если значение параметра не найдено
//                                                         или не заполнено будет добавлена пустая строка
//   
Процедура ДобавитьПараметрПоИмени(Знач Имя, Обязательный = Ложь, ДобавлятьПустой = Истина)

	Если НЕ ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска = Новый Массив();
	КонецЕсли;
	
	Параметр = ЗначенияПараметров.Получить(Имя);
	Если Параметр = Неопределено Тогда
		Параметр = "";
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Параметр) И Обязательный Тогда
		ВызватьИсключение СтрШаблон("Не заполнен обязательный параметр %1!", Имя);
	КонецЕсли;

	Если ЗначениеЗаполнено(Параметр) ИЛИ ДобавлятьПустой Тогда
		ПараметрыЗапуска.Добавить(Параметр);
	КонецЕсли;

КонецПроцедуры // ДобавитьПараметрПоИмени()

// Процедура выполняет подстановку значения параметра из структуры значений параметров в шаблон
// и добавляет результат в массив параметров запуска команды
//   
// Параметры:
//   ШаблонПараметра        - Строка            - шаблон, в который будет выполнена подстановка
//   Имя                    - Строка            - имя параметра в структуре значений параметров
//   Обязательный           - Булево            - Истина - если значение параметра не найдено
//                                                         или не заполнено будет выдано исключение
//   
Процедура ДобавитьПараметрПоШаблону(Знач ШаблонПараметра, Знач Имя, Знач Обязательный = Ложь)

	Если НЕ ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска = Новый Массив();
	КонецЕсли;
	
	ЗначениеПараметра = ЗначенияПараметров.Получить(Имя);

	Если НЕ ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		Если Обязательный Тогда
			ВызватьИсключение СтрШаблон("Не заполнен обязательный параметр %1!", Имя);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ПараметрыЗапуска.Добавить(СтрШаблон(ШаблонПараметра, ЗначениеПараметра));

КонецПроцедуры // ДобавитьПараметрПоШаблону()

// Функция возвращает значение параметра-флага из структуры значений параметров
//   
// Параметры:
//   Имя              - Строка            - имя параметра в структуре значений параметров
//   
// Возвращаемое значение:
//    Булево          - значение флага, если параметр отсутствует в структуре значений параметров,
//                    возвращается Ложь
//
Функция ЗначениеФлага(Знач Имя)

	Параметр = ЗначенияПараметров.Получить(Имя);
	Если Параметр = Неопределено Тогда
		Параметр = Ложь;
	КонецЕсли;

	Возврат Параметр;

КонецФункции // ЗначениеФлага()

#КонецОбласти // СлужебныеПроцедуры

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
