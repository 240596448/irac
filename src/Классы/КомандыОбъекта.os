// Класс хранящий структуру свойств и команд объекта указанного типа
// Доступны типы:
//        agent.admin        - Агент.Администратор
//        cluster            - Кластер
//        cluster.admin      - Кластер.Администратор
//        lock               - Блокировка
//        infobase           - ИБ
//        manager            - МенеджерКластера
//        process            - РабочийПроцесс
//        server             - Сервер
//        service            - Сервис
//        session            - Сеанс
//        connection         - Соединение
//        process.license    - РабочийПроцесс.Лицензия
//        session.license    - Сеанс.Лицензия
//        rule               - ТребованиеНазначения
//        profile            - Профиль
//        profile.directory  - Профиль.Каталог
//        profile.com        - Профиль.COMКласс
//        profile.addin      - Профиль.Компонент
//        profile.module     - Профиль.Модуль
//        profile.app        - Профиль.Приложение
//        profile.inet       - Профиль.ИнтернетРесурс

Перем ТипОбъекта;                  // наименование типа объектов (Кластер, Сервер, ИБ и т.п.)
Перем ОписаниеСвойств;             // структура описания свойств объектов
Перем ПолучениеПараметровОбъектов; // структура описания методов заполнения списка свойств и команд объекта
Перем ПараметрыЗапуска;            // массив параметров запуска команды утилиты RAC
Перем ЗначенияПараметров;          // значения именованых параметров объекта

Перем Лог;

#Область ПрограммныйИнтерфейс

// Конструктор
//   
// Параметры:
//   ИмяТипаОбъекта                 - Строка        - имя типа объекта для которого создается структура параметров
//   ЗначенияПараметровКоманд       - Структура     - список параметров команд:
//                                                       Ключ - имя параметра
//                                                       Значение - значение параметра
//
Процедура ПриСозданииОбъекта(ИмяТипаОбъекта, ЗначенияПараметровКоманд = Неопределено)

	ЗаполнитьПолучениеПараметровОбъекта();

	ТипОбъекта = ПолучениеПараметровОбъектов[ВРег(ИмяТипаОбъекта)]["ИмяТипа"];

	ПроцедураЗаполнения = ПолучениеПараметровОбъектов[ВРег(ТипОбъекта)]["Параметры"];

	Если НЕ ПроцедураЗаполнения = Неопределено Тогда
		Рефлектор = Новый Рефлектор();
		Рефлектор.ВызватьМетод(ЭтотОбъект, ПроцедураЗаполнения, Новый Массив());
	КонецЕсли;

	УстановитьЗначенияПараметровКоманд(ЗначенияПараметровКоманд);

КонецПроцедуры // ПриСозданииОбъекта()

// Процедура устанавливает значения параметров команд
//   
// Параметры:
//   ЗначенияПараметровКоманд       - Структура     - список параметров команд:
//                                                       Ключ - имя параметра
//                                                       Значение - значение параметра
//   Очистить                       - Булево        - Истина - очистить значения параметров перед заполнением
//                                                    Ложь - добавить параметры к существующим
//                                                          (одноименные будут перезаполнены)
//
Процедура УстановитьЗначенияПараметровКоманд(Знач ЗначенияПараметровКоманд, Знач Очистить = Ложь) Экспорт

	Если НЕ ТипЗнч(ЗначенияПараметров) = Тип("Соответствие") ИЛИ Очистить Тогда
		ЗначенияПараметров = Новый Соответствие();
	КонецЕсли;

	Если ТипЗнч(ЗначенияПараметровКоманд) = Тип("Соответствие") Тогда
		Для Каждого ТекЭлемент Из ЗначенияПараметровКоманд Цикл
			ЗначенияПараметров.Вставить(ТекЭлемент.Ключ, ТекЭлемент.Значение);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры // УстановитьЗначенияПараметровКоманд()

// Функция возвращает коллекцию описаний свойств объекта
//   
// Параметры:
//   ИмяПоляКлюча         - Строка    - имя поля, значение которого будет использовано
//                                      в качестве ключа возвращаемого соответствия
//   
// Возвращаемое значение:
//    Соответствие - коллекция описаний свойств объекта, для получения/изменения значений
//
Функция ОписаниеСвойств(Знач ИмяПоляКлюча = "ИмяПараметра") Экспорт
	
	СтруктураОписаний = Новый Соответствие();

	Если НЕ ТипЗнч(ОписаниеСвойств) = Тип("Массив") Тогда
		Возврат СтруктураОписаний;
	КонецЕсли;

	Для Каждого ТекОписание Из ОписаниеСвойств Цикл
		СтруктураОписаний.Вставить(ТекОписание[ИмяПоляКлюча], ТекОписание);
	КонецЦикла;

	Возврат СтруктураОписаний;

КонецФункции // ОписаниеСвойств()

// Функция выполняет заполнение массива параметров запуска команды
// и возвращает результирующий массив
//   
// Параметры:
//   ИмяКоманды         - Строка    - имя команды для которой выпоняется заполнение
//   
// Возвращаемое значение:
//    Массив - параметры запуска команды
//
Функция ПараметрыКоманды(Знач ИмяКоманды) Экспорт
	
	Если ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска.Очистить();
	КонецЕсли;

	Попытка
		ПроцедураЗаполнения = ПолучениеПараметровОбъектов[ВРег(ТипОбъекта)]["Команды"][ВРег(ИмяКоманды)]["Параметры"];
	Исключение
		ВызватьИсключение СтрШаблон("Неудачная попытка получения параметров команды ""%1"" объекта ""%2"": %3",
									ИмяКоманды,
									ТипОбъекта,
									ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

	Если НЕ ПроцедураЗаполнения = Неопределено Тогда
		Рефлектор = Новый Рефлектор();
		Попытка
			Рефлектор.ВызватьМетод(ЭтотОбъект, ПроцедураЗаполнения, Новый Массив());
		Исключение
			ВызватьИсключение
				СтрШаблон("Ошибка вызова метода получения параметров команды ""%1"" объекта ""%2"" (%3()): %4 %5",
	                      ИмяКоманды,
	                      ТипОбъекта,
	                      ПроцедураЗаполнения,
	                      Символы.ПС,
	                      ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЕсли;

	Возврат ПараметрыЗапуска;

КонецФункции // ПараметрыКоманды()

#КонецОбласти // ПрограммныйИнтерфейс

#Область ПроцедурыЗаполненияПараметровОбъектов

#Область Кластеры

// Процедура заполняет массив описаний параметров кластера
//
Процедура Параметры_Кластер_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Ид"                                         , "cluster");
	ДобавитьОписаниеСвойстваОбъекта("АдресСервера"                               , "host");
	ДобавитьОписаниеСвойстваОбъекта("ПортСервера"                                , "port");
	ДобавитьОписаниеСвойстваОбъекта("Имя"                                        , "name");
	ДобавитьОписаниеСвойстваОбъекта("ИнтервалПерезапуска"                        , "lifetime-limit"               , 0,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ДопустимыйОбъемПамяти"                      , "max-memory-size"              , 0,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ЗащищенноеСоединение"                       , "security-level"               , 0,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("УровеньОтказоустойчивости"                  , "session-fault-tolerance-level", 0,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("РежимРаспределенияНагрузки"                 , "load-balancing-mode", 
	                                Перечисления.РежимыРаспределенияНагрузки.ПоПроизводительности,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ИнтервалПревышенияДопустимогоОбъемаПамяти"  , "max-memory-time-limit"        , 0,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ДопустимоеОтклонениеКоличестваОшибокСервера", "errors-count-threshold"       , 0,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ПринудительноЗавершатьПроблемныеПроцессы"   , "kill-problem-processes",
	                                Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ВыключенныеПроцессыОстанавливатьЧерез"      , "expiration-timeout"           , 0,
	                                "Чтение, Добавление, Изменение");

КонецПроцедуры // Параметры_Кластер_Свойства()

// Процедура заполняет общие параметры запуска команд кластеров
//
Процедура Параметры_Кластер_Общие()

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

КонецПроцедуры // Параметры_Кластер_Общие()

// Процедура заполняет параметры запуска команды получения списка кластеров
//
Процедура Параметры_Кластер_Список() Экспорт

	Параметры_Кластер_Общие();

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Кластер_Список()

// Процедура заполняет параметры запуска команды получения описания кластера
//
Процедура Параметры_Кластер_Описание() Экспорт

	Параметры_Кластер_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");

КонецПроцедуры // Параметры_Кластер_Описание()

// Процедура заполняет параметры запуска команды добавления кластера
//
Процедура Параметры_Кластер_Добавить() Экспорт

	Параметры_Кластер_Общие();

	ДобавитьПараметрСтроку("insert");
	
	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");

	ДобавитьПараметрПоШаблону("--host=%1", "АдресСервера");
	ДобавитьПараметрПоШаблону("--port=%1", "ПортСервера");
	ДобавитьПараметрПоШаблону("--name=%1", "Имя");

	ДобавитьПрочиеПараметрыКоманды("Добавление");

КонецПроцедуры // Параметры_Кластер_Добавить()

// Процедура заполняет параметры запуска команды изменения кластера
//
Процедура Параметры_Кластер_Изменить() Экспорт

	Параметры_Кластер_Общие();

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");

	Если НЕ ЗначенияПараметров.Получить("Имя") = Неопределено Тогда
		ДобавитьПараметрПоШаблону("--name=%1", "Имя");
	КонецЕсли;
	
	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Кластер_Изменить()

// Процедура заполняет параметры запуска команды удаления кластера
//
Процедура Параметры_Кластер_Удалить() Экспорт

	Параметры_Кластер_Общие();

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");

	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_Кластер_Удалить()

#КонецОбласти // Кластеры

#Область Администраторы_Общее

// Процедура заполняет массив описаний параметров администратора (агента / кластера)
//
Процедура Параметры_Администратор_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"                , "name"    , "Администратор",
	                                "Чтение, Добавление");
	                                
	ДобавитьОписаниеСвойстваОбъекта("Пароль"             , "pwd"        , "***",
	                                "Добавление");
	                                
	ДобавитьОписаниеСвойстваОбъекта("СпособАвторизации"  , "auth"    , Перечисления.СпособыАвторизации.Пароль,
	                                "Чтение, Добавление");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ПользовательОС"     , "os-user"    , "",
	                                "Чтение, Добавление");
	                                
	ДобавитьОписаниеСвойстваОбъекта("Описание"           , "descr"    , "",
	                                "Чтение, Добавление");

КонецПроцедуры // Параметры_Администратор_Свойства()

#КонецОбласти // Администраторы_Общее

#Область АдминистраторыАгента

// Процедура заполняет массив описаний параметров администратора агента
//
Процедура Параметры_Агент_Администратор_Свойства() Экспорт

	Параметры_Администратор_Свойства();

КонецПроцедуры // Параметры_Агент_Администратор_Свойства()

// Процедура заполняет общие параметры запуска команд администраторов агента
//
Процедура Параметры_Агент_Администратор_Общие() Экспорт

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Агент);

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");
	
	ДобавитьПараметрСтроку("admin");

КонецПроцедуры // Параметры_Агент_Администратор_Общие()

// Процедура заполняет параметры запуска команды получения списка администраторов агента
//
Процедура Параметры_Агент_Администратор_Список() Экспорт

	Параметры_Агент_Администратор_Общие();

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Агент_Администратор_Список()

// Процедура заполняет параметры запуска команды добавления администратора агента
//
Процедура Параметры_Агент_Администратор_Добавить() Экспорт

	Параметры_Агент_Администратор_Общие();

	ДобавитьПараметрСтроку("register");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));

	ДобавитьПрочиеПараметрыКоманды("Добавление", , "Имя");

КонецПроцедуры // Параметры_Агент_Администратор_Добавить()

// Процедура заполняет параметры запуска команды удаления администратора агента
//
Процедура Параметры_Агент_Администратор_Удалить() Экспорт

	Параметры_Агент_Администратор_Общие();

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));
	
КонецПроцедуры // Параметры_Агент_Администратор_Удалить()

#КонецОбласти // АдминистраторыАгента

#Область АдминистраторыКластера

// Процедура заполняет массив описаний параметров администратора кластера
//
Процедура Параметры_Кластер_Администратор_Свойства() Экспорт

	Параметры_Администратор_Свойства();

КонецПроцедуры // Параметры_Кластер_Администратор_Свойства()

// Процедура заполняет общие параметры запуска команд администраторов кластера
//
Процедура Параметры_Кластер_Администратор_Общие() Экспорт

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Кластеры);

	ДобавитьПараметрСтроку("admin");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");
	
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_Кластер_Администратор_Общие()

// Процедура заполняет параметры запуска команды получения списка администраторов кластера
//
Процедура Параметры_Кластер_Администратор_Список() Экспорт

	Параметры_Кластер_Администратор_Общие();

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Кластер_Администратор_Список()

// Процедура заполняет параметры запуска команды добавления администратора кластера
//
Процедура Параметры_Кластер_Администратор_Добавить() Экспорт

	Параметры_Кластер_Администратор_Общие();

	ДобавитьПараметрСтроку("register");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));

	ДобавитьПрочиеПараметрыКоманды("Добавление", , "Имя");

	ДобавитьПараметрПоИмени("СтрокаАвторизацииАгента");

КонецПроцедуры // Параметры_Кластер_Администратор_Добавить()

// Процедура заполняет параметры запуска команды удаления администратора кластера
//
Процедура Параметры_Кластер_Администратор_Удалить() Экспорт

	Параметры_Кластер_Администратор_Общие();

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрСтроку(СтрШаблон("--name=%1", Служебный.ОбернутьВКавычки(ЗначенияПараметров.Получить("Имя"))));
	
КонецПроцедуры // Параметры_Кластер_Администратор_Удалить()

#КонецОбласти // АдминистраторыКластера

#Область МенеджерыКластера

// Процедура заполняет массив описаний параметров менеджера кластера
//
Процедура Параметры_МенеджерКластера_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Ид"            , "manager");
	ДобавитьОписаниеСвойстваОбъекта("ИдПроцессаОС"  , "pid");
	ДобавитьОписаниеСвойстваОбъекта("Назначение"    , "using");
	ДобавитьОписаниеСвойстваОбъекта("АдресСервера"  , "host");
	ДобавитьОписаниеСвойстваОбъекта("ПортСервера"   , "port");
	ДобавитьОписаниеСвойстваОбъекта("Описание"      , "descr");

КонецПроцедуры // Параметры_МенеджерКластера_Свойства()

// Процедура заполняет параметры запуска команды получения списка менеджеров кластера
//
Процедура Параметры_МенеджерКластера_Список() Экспорт

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Менеджеры);
	ДобавитьПараметрСтроку("list");

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");

	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_МенеджерКластера_Список()

#КонецОбласти // МенеджерыКластера

#Область Серверы

// Процедура заполняет массив описаний параметров сервера
//
Процедура Параметры_Сервер_Свойства() Экспорт
	
	ДиапазонПортов = "1560:1591";
	КоличествоИБНаПроцесс = "8";
	КоличествоСоединенийНаПроцесс = "128";
	ПортГлавногоМенеджераКластера = "1541";
	ПортАгента = "1540";

	ДобавитьОписаниеСвойстваОбъекта("Ид"                                   , "server");
	ДобавитьОписаниеСвойстваОбъекта("Имя"                                  , "name"            , ,
	                                "Чтение, Добавление");
	ДобавитьОписаниеСвойстваОбъекта("АдресАгента"                          , "agent-host"        , "localhost",
	                                "Чтение, Добавление");
	ДобавитьОписаниеСвойстваОбъекта("ПортАгента"                           , "agent-port"        , ПортАгента,
	                                "Чтение, Добавление");
	ДобавитьОписаниеСвойстваОбъекта("ДиапазонПортов"                       , "port-range"        , ДиапазонПортов,
	                                "Чтение, Добавление, Изменение");
	
	ДобавитьОписаниеСвойстваОбъекта("ЦентральныйСервер"                    , "using"            ,
	                                Перечисления.ВариантыИспользованияРабочегоСервера.Главный,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("МенеджерПодКаждыйСервис"              , "dedicate-managers",
	                                Перечисления.ВариантыРазмещенияСервисов.ВОдномМенеджере,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("КоличествоИБНаПроцесс"                , "infobases-limit"  ,
	                                КоличествоИБНаПроцесс,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("МаксОбъемПамятиРабочихПроцессов"      , "memory-limit"     , "0",
	                                "Чтение, Добавление, Изменение");
	
	ДобавитьОписаниеСвойстваОбъекта("КоличествоСоединенийНаПроцесс"        , "connections-limit",
	                                КоличествоСоединенийНаПроцесс,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ПортГлавногоМенеджераКластера"        , "cluster-port"     ,
	                                ПортГлавногоМенеджераКластера,
	                                "Чтение, Добавление");

	ДобавитьОписаниеСвойстваОбъекта("БезопасныйОбъемПамятиРабочихПроцессов", "safe-working-processes-memory-limit", "0",
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("БезопасныйРасходПамятиЗаОдинВызов"    , "safe-call-memory-limit"    , "0",
	                                "Чтение, Добавление, Изменение");

КонецПроцедуры // Параметры_Сервер_Свойства()

// Процедура заполняет общие параметры запуска команд серверов
//
Процедура Параметры_Сервер_Общие()

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Серверы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_Сервера_Общие()

// Процедура заполняет параметры команды получения списка серверов
//
Процедура Параметры_Сервер_Список() Экспорт

	Параметры_Сервер_Общие();

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Сервер_Список()

// Процедура заполняет параметры команды получения описания сервера
//
Процедура Параметры_Сервер_Описание() Экспорт

	Параметры_Сервер_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера");

КонецПроцедуры // Параметры_Сервер_Описание()

// Процедура заполняет параметры команды добавления сервера
//
Процедура Параметры_Сервер_Добавить() Экспорт

	Параметры_Сервер_Общие();

	ДобавитьПараметрСтроку("insert");
	
	ДобавитьПараметрПоШаблону("--name=%1"  , "Имя");
	ДобавитьПараметрПоШаблону("--locale=%1", "Локализация");
	
	ДобавитьПрочиеПараметрыКоманды("Добавление", , "Имя");

КонецПроцедуры // Параметры_Сервер_Добавить()

// Процедура заполняет параметры команды изменения сервера
//
Процедура Параметры_Сервер_Изменить() Экспорт

	Параметры_Сервер_Общие();

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера");

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Сервер_Изменить()

// Процедура заполняет параметры команды удаления сервера
//
Процедура Параметры_Сервер_Удалить() Экспорт

	Параметры_Сервер_Общие();

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервеа");

КонецПроцедуры // Параметры_Сервер_Удалить()

#КонецОбласти // Серверы

#Область РабочиеПроцессы

// Процедура заполняет массив описаний параметров рабочего процесса
//
Процедура Параметры_РабочийПроцесс_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Ид"                            , "process");
	ДобавитьОписаниеСвойстваОбъекта("АдресСервера"                  , "host");
	ДобавитьОписаниеСвойстваОбъекта("ПортСервера"                   , "port");
	ДобавитьОписаниеСвойстваОбъекта("ИдПроцессаОС"                  , "pid");
	ДобавитьОписаниеСвойстваОбъекта("Активен"                       , "is-enable");
	ДобавитьОписаниеСвойстваОбъекта("Выполняется"                   , "running");
	ДобавитьОписаниеСвойстваОбъекта("ВремяЗапуска"                  , "started-at");
	ДобавитьОписаниеСвойстваОбъекта("Использование"                 , "use");
	ДобавитьОписаниеСвойстваОбъекта("ДоступнаяПроизводительность"   , "available-perfomance");
	ДобавитьОписаниеСвойстваОбъекта("Емкость"                       , "capacity");
	ДобавитьОписаниеСвойстваОбъекта("КоличествоСоединений"          , "connections");
	ДобавитьОписаниеСвойстваОбъекта("ЗанятьПамяти"                  , "memory-size");
	ДобавитьОписаниеСвойстваОбъекта("ВремяПревышенияЗанятойПамяти"  , " memory-excess-time");
	ДобавитьОписаниеСвойстваОбъекта("ОбъемВыборки"                  , "selection-size");
	ДобавитьОписаниеСвойстваОбъекта("ЗатраченоКлиентом"             , "avg-back-call-time");
	ДобавитьОписаниеСвойстваОбъекта("ЗатраченоВсего"                , "avg-call-time");
	ДобавитьОписаниеСвойстваОбъекта("ЗатраченоСУБД"                 , "avg-db-call-time");
	ДобавитьОписаниеСвойстваОбъекта("ЗатраченоМенеджеромБлокировок" , "avg-lock-call-time");
	ДобавитьОписаниеСвойстваОбъекта("ЗатраченоСервером"             , "avg-server-call-time");
	ДобавитьОписаниеСвойстваОбъекта("КлиентскихПотоков"             , "avg-threads");

КонецПроцедуры // Параметры_РабочийПроцесс_Свойства()

// Процедура заполняет общие параметры запуска команд рабочих процессов
//
Процедура Параметры_РабочийПроцесс_Общие()

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.РабочиеПроцессы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_РабочийПроцесс_Общие()

// Процедура заполняет параметры команды получения списка рабочих процессов
//
Процедура Параметры_РабочийПроцесс_Список() Экспорт

	Параметры_РабочийПроцесс_Общие();

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_РабочийПроцесс_Список()

// Процедура заполняет параметры команды получения описания рабочего процесса
//
Процедура Параметры_РабочийПроцесс_Описание() Экспорт

	Параметры_РабочийПроцесс_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--process=%1", "ИдентификаторПроцесса");

КонецПроцедуры // Параметры_РабочийПроцесс_Описание()

#КонецОбласти // РабочиеПроцессы

#Область ИнформационныеБазы

// Процедура заполняет массив описаний свойств информационной базы
//
Процедура Параметры_ИБ_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Ид"                                   , "infobase");
	ДобавитьОписаниеСвойстваОбъекта("ТипСУБД"                              , "dbms",
	                                Перечисления.ТипыСУБД.MSSQLServer, "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("АдресСервераСУБД"                     , "db-server", "",
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ИмяБазыСУБД"                          , "db-name", ,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ИмяПользователяБазыСУБД"              , "db-user", ,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ПарольПользователяБазыСУБД"           , "db-pwd", ,
	                                "Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("НачалоБлокировкиСеансов"              , "denied-from", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ОкончаниеБлокировкиСеансов"           , "denied-to", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("СообщениеБлокировкиСеансов"           , "denied-message", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ПараметрБлокировкиСеансов"            , "denied-parameter", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("КодРазрешения"                        , "permission-code", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("БлокировкаСеансовВключена"            , "sessions-deny", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("БлокировкаРегламентныхЗаданийВключена", "scheduled-jobs-deny",
	                                Перечисления.СостоянияВыключателя.Выключено,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ВыдачаЛицензийСервером"               , "license-distribution",
	                                Перечисления.ПраваДоступа.Разрешено,
	                                "Чтение, Добавление, Изменение");
	
	ДобавитьОписаниеСвойстваОбъекта("ПараметрыВнешнегоУправленияСеансами",
	                                "external-session-manager-connection-string", ,
	                                "Чтение, Изменение");
	
	ДобавитьОписаниеСвойстваОбъекта("ОбязательноеВнешнееУправлениеСеансами", "external-session-manager-required",
	                                Перечисления.ДаНет.Нет,
	                                "Чтение, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ПрофильБезопасности"                  , "security-profile-name", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ПрофильБезопасностиБезопасногоРежима" , "safe-mode-security-profile-name", ,
	                                "Чтение, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("СмещениеДат"                          , "date-offset", "2000",
	                                "Добавление");
	ДобавитьОписаниеСвойстваОбъекта("Описание"                             , "descr", ,
	                                "Чтение, Изменение");

КонецПроцедуры // Параметры_ИБ_Свойства()

// Процедура заполняет общие параметры запуска команд информационных баз
//
Процедура Параметры_ИБ_Общие()

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ИБ);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_ИБ_Общие()

// Процедура заполняет параметры команды получения списка информационных баз
//
Процедура Параметры_ИБ_Список() Экспорт

	Параметры_ИБ_Общие();

	ДобавитьПараметрСтроку("summary");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_ИБ_Список()

// Процедура заполняет параметры команды получения сокращенного описания информационной базы
//
Процедура Параметры_ИБ_Описание() Экспорт

	Параметры_ИБ_Общие();

	ДобавитьПараметрСтроку("summary");
	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");

КонецПроцедуры // Параметры_ИБ_Описание()

// Процедура заполняет параметры команды получения полного описания информационной базы
//
Процедура Параметры_ИБ_ПолноеОписание() Экспорт

	Параметры_ИБ_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

КонецПроцедуры // Параметры_ИБ_ПолноеОписание()

// Процедура заполняет параметры команды добавления информационной базы
//
Процедура Параметры_ИБ_Добавить() Экспорт

	Параметры_ИБ_Общие();

	ДобавитьПараметрСтроку("create");
	
	ДобавитьПараметрПоШаблону("--name=%1"  , "Имя");
	ДобавитьПараметрПоШаблону("--locale=%1", "Локализация");
	
	Если ЗначениеФлага("СоздатьБазуСУБД") Тогда
		ДобавитьПараметрСтроку("--create-database");
	КонецЕсли;

	ДобавитьПрочиеПараметрыКоманды("Добавление");

КонецПроцедуры // Параметры_ИБ_Добавить()

// Процедура заполняет параметры команды изменения информационной базы
//
Процедура Параметры_ИБ_Изменить() Экспорт

	Параметры_ИБ_Общие();

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ИБ_Изменить()

// Процедура заполняет параметры команды удаления информационной базы
//
Процедура Параметры_ИБ_Удалить() Экспорт

	Параметры_ИБ_Общие();

	ДобавитьПараметрСтроку("drop");

	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

	Если ЗначенияПараметров.Получить("ДействияСБазойСУБД") = Перечисления.ДействияСБазойСУБДПриУдалении.Удалить Тогда
		ДобавитьПараметрСтроку("--drop-database");
	ИначеЕсли ЗначенияПараметров.Получить("ДействияСБазойСУБД") = Перечисления.ДействияСБазойСУБДПриУдалении.Очистить Тогда
		ДобавитьПараметрСтроку("--clear-database");
	КонецЕсли;

КонецПроцедуры // Параметры_ИБ_Удалить()

#КонецОбласти // ИнформационныеБазы

#Область Сеансы

// Процедура заполняет массив описаний свойств информационной базы
//
Процедура Параметры_Сеанс_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Ид"                           , "session");
	ДобавитьОписаниеСвойстваОбъекта("НомерСеанса"                  , "session-id");
	ДобавитьОписаниеСвойстваОбъекта("ИнформационнаяБаза_Ид"        , "infobase");
	ДобавитьОписаниеСвойстваОбъекта("Соединение_Ид"                , "connection");
	ДобавитьОписаниеСвойстваОбъекта("Процесс_Ид"                   , "process");
	ДобавитьОписаниеСвойстваОбъекта("Пользователь"                 , "user-name");
	ДобавитьОписаниеСвойстваОбъекта("Компьютер"                    , "host");
	ДобавитьОписаниеСвойстваОбъекта("Приложение"                   , "app-id");
	ДобавитьОписаниеСвойстваОбъекта("Язык"                         , "locale");
	ДобавитьОписаниеСвойстваОбъекта("ВремяНачала"                  , "started-at");
	ДобавитьОписаниеСвойстваОбъекта("ПоследняяАктивность"          , "last-active-at");
	ДобавитьОписаниеСвойстваОбъекта("Спящий"                       , "hibernate");
	ДобавитьОписаниеСвойстваОбъекта("ЗаснутьЧерез"                 , "passive-session-hibernate-time");
	ДобавитьОписаниеСвойстваОбъекта("ЗавершитьЧерез"               , "hibernate-session-terminate-time");
	ДобавитьОписаниеСвойстваОбъекта("ЗаблокированоСУБД"            , "blocked-by-dbms");
	ДобавитьОписаниеСвойстваОбъекта("ЗаблокированоУпр"             , "blocked-by-ls");
	ДобавитьОписаниеСвойстваОбъекта("ДанныхВсего"                  , "bytes-all");
	ДобавитьОписаниеСвойстваОбъекта("Данных5мин"                   , "bytes-last-5min");
	ДобавитьОписаниеСвойстваОбъекта("КоличествоВызововВсего"       , "calls-all");
	ДобавитьОписаниеСвойстваОбъекта("КоличествоВызовов5мин"        , "calls-last-5min");
	ДобавитьОписаниеСвойстваОбъекта("ДанныхСУБДВсего"              , "dbms-bytes-all");
	ДобавитьОписаниеСвойстваОбъекта("ДанныхСУБД5мин"               , "dbms-bytes-last-5min");
	ДобавитьОписаниеСвойстваОбъекта("СоединениеССУБД"              , "db-proc-info");
	ДобавитьОписаниеСвойстваОбъекта("ЗахваченоСУБД"                , "db-proc-took");
	ДобавитьОписаниеСвойстваОбъекта("ВремяЗахватаСУБД"             , "db-proc-took-at");
	ДобавитьОписаниеСвойстваОбъекта("ВремяВызововВсего"            , "duration-all");
	ДобавитьОписаниеСвойстваОбъекта("ВремяВызововСУБДВсего"        , "duration-all-dbms");
	ДобавитьОписаниеСвойстваОбъекта("ВремяВызововТекущее"          , "duration-current");
	ДобавитьОписаниеСвойстваОбъекта("ВремяВызововСУБДТекущее"      , "duration-current-dbms");
	ДобавитьОписаниеСвойстваОбъекта("ВремяВызовов5мин"             , "duration-last-5min");
	ДобавитьОписаниеСвойстваОбъекта("ВремяВызововСУБД5мин"         , "duration-last-5min-dbms");
	     
КонецПроцедуры // Параметры_Сеанс_Свойства()

// Процедура заполняет общие параметры запуска команд сеансов
//
Процедура Параметры_Сеанс_Общие()

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сеансы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_ИБ_Общие()

// Процедура заполняет параметры команды получения списка сеансов
//
Процедура Параметры_Сеанс_Список() Экспорт

	Параметры_Сеанс_Общие();

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");

КонецПроцедуры // Параметры_Сеанс_Список()

// Процедура заполняет параметры команды получения описания сеанса
//
Процедура Параметры_Сеанс_Описание() Экспорт

	Параметры_Сеанс_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--session=%1", "ИдентификаторСеанса", Истина);

КонецПроцедуры // Параметры_Сеанс_Описание()

// Процедура заполняет параметры команды удаления сеанса
//
Процедура Параметры_Сеанс_Удалить() Экспорт

	Параметры_Сеанс_Общие();

	ДобавитьПараметрСтроку("terminate");

	ДобавитьПараметрПоШаблону("--session=%1", "ИдентификаторСеанса", Истина);

КонецПроцедуры // Параметры_Сеанс_Удалить()

#КонецОбласти // Сеансы

#Область Лицензии

// Процедура заполняет массив описаний параметров лицензии (общие)
//
Процедура Параметры_Лицензия_Свойства_Общие() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("ПолноеИмя"             , "full-name");
	ДобавитьОписаниеСвойстваОбъекта("Серия"                 , "series");
	ДобавитьОписаниеСвойстваОбъекта("ВыданаСервером"        , "issued-by-server");
	ДобавитьОписаниеСвойстваОбъекта("ТипЛицензии"           , "license-type");
	ДобавитьОписаниеСвойстваОбъекта("Сетевая"               , "net");
	ДобавитьОписаниеСвойстваОбъекта("МаксПользователей"     , "max-users-all");
	ДобавитьОписаниеСвойстваОбъекта("МаксПользователейТек"  , "max-users-cur");
	ДобавитьОписаниеСвойстваОбъекта("Менеджер_АдресСервера" , "rmngr-address");
	ДобавитьОписаниеСвойстваОбъекта("Менеджер_ПортСервера"  , "rmngr-port");
	ДобавитьОписаниеСвойстваОбъекта("Менеджер_ИдОС"         , "rmngr-pid");
	ДобавитьОписаниеСвойстваОбъекта("КраткоеПредставление"  , "short-presentation");
	ДобавитьОписаниеСвойстваОбъекта("ПолноеПредставление"   , "full-presentation");

КонецПроцедуры // Параметры_Лицензия_Общие()

// Процедура заполняет массив описаний параметров лицензий рабочего процесса
//
Процедура Параметры_РабочийПроцесс_Лицензия_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Процесс_Ид"            , "process");
	ДобавитьОписаниеСвойстваОбъекта("Процесс_АдресСервера"  , "host");
	ДобавитьОписаниеСвойстваОбъекта("Процесс_ПортСервера"   , "port");
	ДобавитьОписаниеСвойстваОбъекта("Процесс_ИдОС"          , "pid");

	Параметры_Лицензия_Свойства_Общие();

КонецПроцедуры // Параметры_РабочийПроцесс_Лицензия_Свойства()

// Процедура заполняет параметры команды получения списка лицензий рабочих процессов
//
Процедура Параметры_РабочийПроцесс_Лицензия_Список() Экспорт

	Параметры_РабочийПроцесс_Общие();

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрСтроку("--license");

КонецПроцедуры // Параметры_РабочийПроцесс_Лицензия_Список()

// Процедура заполняет параметры команды получения списка лицензий рабочего процесса
//
Процедура Параметры_РабочийПроцесс_Лицензия_Описание() Экспорт

	Параметры_РабочийПроцесс_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрСтроку("--license");
	ДобавитьПараметрПоШаблону("--process=%1", "ИдентификаторПроцесса", Истина);

КонецПроцедуры // Параметры_РабочийПроцесс_Лицензия_Описание()

// Процедура заполняет массив описаний параметров лицензии сеанса
//
Процедура Параметры_Сеанс_Лицензия_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Сеанс_Ид"               , "session");
	ДобавитьОписаниеСвойстваОбъекта("ИмяПользователя"        , "user-name");
	ДобавитьОписаниеСвойстваОбъекта("АдресМашины"            , "host");
	ДобавитьОписаниеСвойстваОбъекта("ТипПриложения"          , "app-id");

	Параметры_Лицензия_Свойства_Общие();

КонецПроцедуры // Параметры_Сеанс_Лицензия_Свойства()

// Процедура заполняет параметры команды получения списка лицензий сеансов
//
Процедура Параметры_Сеанс_Лицензия_Список() Экспорт

	Параметры_Сеанс_Общие();

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрСтроку("--license");

КонецПроцедуры // Параметры_Сеанс_Лицензия_Список()

// Процедура заполняет параметры команды получения списка лицензий сеанса
//
Процедура Параметры_Сеанс_Лицензия_Описание() Экспорт

	Параметры_Сеанс_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрСтроку("--license");
	ДобавитьПараметрПоШаблону("--session=%1", "ИдентификаторСеанса", Истина);

КонецПроцедуры // Параметры_Сеанс_Лицензия_Описание()

#КонецОбласти // Лицензии

#Область Блокировки

// Процедура заполняет массив описаний параметров соединения
//
Процедура Параметры_Соединение_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Ид"                   , "connection");
	ДобавитьОписаниеСвойстваОбъекта("НомерСоединения"      , "conn-id");
	ДобавитьОписаниеСвойстваОбъекта("Процесс_Ид"           , "process");
	ДобавитьОписаниеСвойстваОбъекта("ИнформационнаяБаза_Ид", "infobase");
	ДобавитьОписаниеСвойстваОбъекта("Приложение"           , "application");
	ДобавитьОписаниеСвойстваОбъекта("НачалоРаботы"         , "connected-at");
	ДобавитьОписаниеСвойстваОбъекта("НомерСеанса"          , "session-number");
	ДобавитьОписаниеСвойстваОбъекта("Заблокировано"        , "blocked-by-ls");
	
КонецПроцедуры // Параметры_Соединение_Свойства()

// Процедура заполняет общие параметры команды получения соединений
//
Процедура Параметры_Соединение_Общие() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Соединения);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_Соединение_Общие()

// Процедура заполняет параметры команды получения списка соединений
//
Процедура Параметры_Соединение_Список() Экспорт

	Параметры_Соединение_Общие();

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--process=%1" , "ИдентификаторПроцесса");
	ДобавитьПараметрПоШаблону("--infobase=%1", "ИдентификаторИБ");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

КонецПроцедуры // Параметры_Соединение_Список()

// Процедура заполняет параметры команды получения параметров соединения
//
Процедура Параметры_Соединение_Описание() Экспорт

	Параметры_Соединение_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--connection=%1", "ИдентификаторСоединения", Истина);

КонецПроцедуры // Параметры_Соединение_Описание()

// Процедура заполняет параметры команды получения отключения соединения
//
Процедура Параметры_Соединение_Отключить() Экспорт

	Параметры_Соединение_Общие();

	ДобавитьПараметрСтроку("disconnect");
	ДобавитьПараметрПоШаблону("--process=%1"   , "ИдентификаторПроцесса", Истина);
	ДобавитьПараметрПоШаблону("--connection=%1", "ИдентификаторСоединения", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииИБ");

КонецПроцедуры // Параметры_Соединение_Отключить()

#КонецОбласти // Соединения

#Область Блокировки

// Процедура заполняет массив описаний параметров блокировки
//
Процедура Параметры_Блокировка_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Соединение_Ид"   , "connection");
	ДобавитьОписаниеСвойстваОбъекта("Сеанс_Ид"        , "session");
	ДобавитьОписаниеСвойстваОбъекта("Объект_Ид"       , "object");
	ДобавитьОписаниеСвойстваОбъекта("НачалоБлокировки", "locked");
	ДобавитьОписаниеСвойстваОбъекта("Описание"        , "descr");
	
КонецПроцедуры // Параметры_Блокировка_Свойства()

// Процедура заполняет параметры команды получения списка блокировок
//
Процедура Параметры_Блокировка_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Блокировки);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--infobase=%1"  , "ИдентификаторИБ");
	ДобавитьПараметрПоШаблону("--connection=%1", "ИдентификаторСоединения");
	ДобавитьПараметрПоШаблону("--session=%1"   , "ИдентификаторСеанса");

КонецПроцедуры // Параметры_Блокировка_Список()

#КонецОбласти // Блокировки

#Область Сервисы

// Процедура заполняет массив описаний параметров сервиса
//
Процедура Параметры_Сервис_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"                  , "name");
	ДобавитьОписаниеСвойстваОбъекта("ТолькоГлавныйМенеджер", "main-only");
	ДобавитьОписаниеСвойстваОбъекта("Менеджер_Ид"          , "manager");
	ДобавитьОписаниеСвойстваОбъекта("Описание"             , "descr");

КонецПроцедуры // Параметры_Сервис_Свойства()

// Процедура заполняет параметры команды получения списка сервисов
//
Процедура Параметры_Сервис_Список() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.Сервисы);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Сервис_Список()

#КонецОбласти // Сервисы

#Область ТребованияНазначенияФункциональности

// Процедура заполняет массив описаний параметров требования назначения
//
Процедура Параметры_ТребованиеНазначения_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Ид"               , "rule");
	ДобавитьОписаниеСвойстваОбъекта("ТипОбъекта"       , "object-type",
	                                Перечисления.ОбъектыНазначенияФункциональности.ЛюбойОбъект,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ИмяИБ"            , "infobase-name",
	                                "",
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("ТипНазначения"    , "rule-type",
	                                Перечисления.ТипыНазначенияФункциональности.Авто,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ДопПараметр"      , "application-ext",
									"",
									"Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Приоритет"        , "priority",
									0,
									"Чтение, Добавление, Изменение");

КонецПроцедуры // Параметры_ТребованиеНазначения_Свойства()

// Процедура заполняет общие параметры команды получения требований назначения функциональности
//
Процедура Параметры_ТребованиеНазначения_Общие() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.НазначенияФункциональности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_ТребованиеНазначения_Общие()

// Процедура заполняет параметры команды получения списка требований назначения функциональности
//
Процедура Параметры_ТребованиеНазначения_Список() Экспорт

	Параметры_ТребованиеНазначения_Общие();

	ДобавитьПараметрСтроку("list");
	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);

КонецПроцедуры // Параметры_ТребованиеНазначения_Список()

// Процедура заполняет параметры команды получения описания требования назначения функциональности
//
Процедура Параметры_ТребованиеНазначения_Описание() Экспорт

	Параметры_ТребованиеНазначения_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--rule=%1"  , "ИдентификаторТребования", Истина);

КонецПроцедуры // Параметры_ТребованиеНазначения_Описание()

// Процедура заполняет параметры команды добавления требования назначения функциональности
//
Процедура Параметры_ТребованиеНазначения_Добавить() Экспорт

	Параметры_ТребованиеНазначения_Общие();

	ДобавитьПараметрСтроку("insert");
	
	ДобавитьПараметрПоШаблону("--server=%1"  , "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--position=%1", "Позиция", Истина);
	
	ДобавитьПрочиеПараметрыКоманды("Добавление");

КонецПроцедуры // Параметры_ТребованиеНазначения_Добавить()

// Процедура заполняет параметры команды изменения требования назначения функциональности
//
Процедура Параметры_ТребованиеНазначения_Изменить() Экспорт

	Параметры_ТребованиеНазначения_Общие();

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--server=%1"  , "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--position=%1", "Позиция", Истина);
	ДобавитьПараметрПоШаблону("--rule=%1"    , "ИдентификаторТребования", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_ТребованиеНазначения_Изменить()

// Процедура заполняет параметры команды удаления требования назначения функциональности
//
Процедура Параметры_ТребованиеНазначения_Удалить() Экспорт

	Параметры_ТребованиеНазначения_Общие();

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--server=%1", "ИдентификаторСервера", Истина);
	ДобавитьПараметрПоШаблону("--rule=%1"  , "ИдентификаторТребования", Истина);

КонецПроцедуры // Параметры_ТребованиеНазначения_Удалить()

// Процедура заполняет параметры команды применения требований назначения функциональности
//
Процедура Параметры_ТребованиеНазначения_Применить() Экспорт

	Параметры_ТребованиеНазначения_Общие();

	ДобавитьПараметрСтроку("apply");

	Если ЗначениеФлага("ПрименитьЧастично") Тогда
		ДобавитьПараметрСтроку("--partial");
	Иначе
		ДобавитьПараметрСтроку("--full");
	КонецЕсли;

КонецПроцедуры // Параметры_ТребованиеНазначения_Применить()

#КонецОбласти // ТребованияНазначенияФункциональности

#Область  ПрофилиБезопасности

// Процедура заполняет массив описаний параметров профиля безопасности
//
Процедура Параметры_Профиль_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"                             , "name");
	ДобавитьОписаниеСвойстваОбъекта("Описание"                        , "descr", "", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Каталоги"                        , "directory",                            
	                                Перечисления.РежимыДоступа.Список);

	ДобавитьОписаниеСвойстваОбъекта("COMКлассы"                        , "com",
	                                Перечисления.РежимыДоступа.Список);

	ДобавитьОписаниеСвойстваОбъекта("ВнешниеКомпоненты"                , "addin",
	                                Перечисления.РежимыДоступа.Список);

	ДобавитьОписаниеСвойстваОбъекта("Модули"                           , "module",
	                                Перечисления.РежимыДоступа.Список);

	ДобавитьОписаниеСвойстваОбъекта("Приложения"                       , "app",
	                                Перечисления.РежимыДоступа.Список);

	ДобавитьОписаниеСвойстваОбъекта("ИнтернетРесурсы"                  , "inet",
	                                Перечисления.РежимыДоступа.Список);

	ДобавитьОписаниеСвойстваОбъекта("Конфигуратор"                     , "config",
	                                Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ПривилегированныйРежим"           , "priv",
	                                Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("Криптография"                     , "crypto",
	                                Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("РасширениеПрав"                   , "right-extension",
	                                Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ОграничивающиеРоли"               , "right-extension-definition-roles"    , "",
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("РасширениеВсехМодулей"            , "all-modules-extension",
	                                Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");

	ДобавитьОписаниеСвойстваОбъекта("ДоступныеМодули"                  , "modules-available-for-extension"        , "",
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("НедоступныеМодули"                , "modules-not-available-for-extension"    , "",
	                                "Чтение, Добавление, Изменение");
	
КонецПроцедуры // Параметры_Профиль_Свойства()

// Процедура заполняет общие параметры команды получения профиля безопасности
//
Процедура Параметры_Профиль_Общие() Экспорт

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.ПрофилиБезопасности);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера", Истина);
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_Профиль_Общие()

// Процедура заполняет параметры команды получения списка профиля безопасности
//
Процедура Параметры_Профиль_Список() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Профиль_Список()

// Процедура заполняет параметры команды изменения профиля безопасности
//
Процедура Параметры_Профиль_ИзменитьРежимДоступа() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);
	ДобавитьПараметрПоШаблону("--access=%1", "РежимДоступа", Истина);

КонецПроцедуры // Параметры_Профиль_Изменить()

// Процедура заполняет параметры команды изменения профиля безопасности
//
Процедура Параметры_Профиль_Изменить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Профиль_Изменить()

// Процедура заполняет параметры команды удаления профиля безопасности
//
Процедура Параметры_Профиль_Удалить() Экспорт

	Параметры_ТребованиеНазначения_Общие();

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

КонецПроцедуры // Параметры_Профиль_Удалить()

#Область ПрофилиБезопасности_Каталоги

// Процедура заполняет массив описаний параметров виртуального каталога профиля безопасности
//
Процедура Параметры_Профиль_Каталог_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"           , "alias");
	ДобавитьОписаниеСвойстваОбъекта("Описание"      , "descr"       , "", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ПутьККаталогу" , "physicalPath", "", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Чтение",
									"allowedRead",
									Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");
	                                
	ДобавитьОписаниеСвойстваОбъекта("Запись",
									"allowedWrite",
									Перечисления.ДаНет.Нет,
	                                "Чтение, Добавление, Изменение");
	
КонецПроцедуры // Параметры_Профиль_Каталог_Свойства()

// Процедура заполняет параметры команды получения списка разрешений
// для каталогов профиля безопасности
//
Процедура Параметры_Профиль_Каталог_Список() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Профиль_Каталог_Список()

// Процедура заполняет параметры команды изменения разрешения
// для каталога профиля безопасности
//
Процедура Параметры_Профиль_Каталог_Изменить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--alias=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Профиль_Каталог_Изменить()

// Процедура заполняет параметры команды удаления каталога
// из списка разрешений профиля безопасности
//
Процедура Параметры_Профиль_Каталог_Удалить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--alias=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_Профиль_Каталог_Удалить()

#КонецОбласти // ПрофилиБезопасности_Каталоги

#Область ПрофилиБезопасности_COMКлассы

// Процедура заполняет массив описаний параметров COM-класса профиля безопасности
//
Процедура Параметры_Профиль_COMКласс_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"      , "name");
	ДобавитьОписаниеСвойстваОбъекта("Описание" , "descr"   , "", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ИмяФайла" , "fileName", "", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ИдКласса" , "id"      , "", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Компьютер", "host"    , "", "Чтение, Добавление, Изменение");

КонецПроцедуры // Параметры_Профиль_COMКласс_Свойства()

// Процедура заполняет параметры команды получения списка разрешений
// для com-классов профиля безопасности
//
Процедура Параметры_Профиль_COMКласс_Список() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Профиль_COMКласс_Список()

// Процедура заполняет параметры команды изменения разрешения
// для com-класса профиля безопасности
//
Процедура Параметры_Профиль_COMКласс_Изменить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Профиль_COMКласс_Изменить()

// Процедура заполняет параметры команды удаления com-класса
// из списка разрешений профиля безопасности
//
Процедура Параметры_Профиль_COMКласс_Удалить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_Профиль_COMКласс_Удалить()

#КонецОбласти // ПрофилиБезопасности_COMКлассы

#Область ПрофилиБезопасности_Компоненты

// Процедура заполняет массив описаний параметров внешней компоненты профиля безопасности
//
Процедура Параметры_Профиль_Компонент_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"     , "name");
	ДобавитьОписаниеСвойстваОбъекта("Описание", "descr", "", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Хэш"     , "hash" ,   , "Чтение, Добавление, Изменение");
	
КонецПроцедуры // Параметры_Профиль_Компонент_Свойства()

// Процедура заполняет параметры команды получения списка разрешений
// для компонент профиля безопасности
//
Процедура Параметры_Профиль_Компонент_Список() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Профиль_Компонент_Список()

// Процедура заполняет параметры команды изменения разрешения
// для компонента профиля безопасности
//
Процедура Параметры_Профиль_Компонент_Изменить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Профиль_Компонент_Изменить()

// Процедура заполняет параметры команды удаления компонента
// из списка разрешений профиля безопасности
//
Процедура Параметры_Профиль_Компонент_Удалить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_Профиль_Компонент_Удалить()

#КонецОбласти // ПрофилиБезопасности_Компоненты

#Область ПрофилиБезопасности_Модули

// Процедура заполняет массив описаний параметров модуля профиля безопасности
//
Процедура Параметры_Профиль_Модуль_Свойства() Экспорт

	Параметры_Профиль_Компонент_Свойства();
	
КонецПроцедуры // Параметры_Профиль_Модуль_Свойства()

// Процедура заполняет параметры команды получения списка разрешений
// для модулей профиля безопасности
//
Процедура Параметры_Профиль_Модуль_Список() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Профиль_Модуль_Список()

// Процедура заполняет параметры команды изменения разрешения
// для модуля профиля безопасности
//
Процедура Параметры_Профиль_Модуль_Изменить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Профиль_Модуль_Изменить()

// Процедура заполняет параметры команды удаления модуля
// из списка разрешений профиля безопасности
//
Процедура Параметры_Профиль_Модуль_Удалить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_Профиль_Модуль_Удалить()

#КонецОбласти // ПрофилиБезопасности_Модули

#Область ПрофилиБезопасности_Приложения

// Процедура заполняет массив описаний параметров разрешенного приложения профиля безопасности
//
Процедура Параметры_Профиль_Приложение_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"     , "name");
	ДобавитьОписаниеСвойстваОбъекта("Описание", "descr", "" , "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Маска"   , "wild" , "*", "Чтение, Добавление, Изменение");

КонецПроцедуры // Параметры_Профиль_Приложение_Свойства()

// Процедура заполняет параметры команды получения списка разрешений
// для приложений профиля безопасности
//
Процедура Параметры_Профиль_Приложение_Список() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Профиль_Приложение_Список()

// Процедура заполняет параметры команды изменения разрешения
// для приложения профиля безопасности
//
Процедура Параметры_Профиль_Приложение_Изменить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Профиль_Приложение_Изменить()

// Процедура заполняет параметры команды удаления приложения
// из списка разрешений профиля безопасности
//
Процедура Параметры_Профиль_Приложение_Удалить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_Профиль_Приложение_Удалить()

#КонецОбласти // ПрофилиБезопасности_Приложения

#Область ПрофилиБезопасности_ИнтернетРесурсы

// Процедура заполняет массив описаний параметров интернет ресурса профиля безопасности
//
Процедура Параметры_Профиль_ИнтернетРесурс_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"         , "name");
	ДобавитьОписаниеСвойстваОбъекта("Описание"    , "descr"   , ""    , "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Протокол"    , "protocol", ""    , "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("АдресРесурса", "url"     , "http", "Чтение, Добавление, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ПортСервера" , "port"    , ""    , "Чтение, Добавление, Изменение");

КонецПроцедуры // Параметры_Профиль_ИнтернетРесурс_Свойства()

// Процедура заполняет параметры команды получения списка разрешений
// для интернет ресурсов профиля безопасности
//
Процедура Параметры_Профиль_ИнтернетРесурс_Список() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_Профиль_ИнтернетРесурс_Список()

// Процедура заполняет параметры команды изменения разрешения
// для интернет ресурса профиля безопасности
//
Процедура Параметры_Профиль_ИнтернетРесурс_Изменить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("update");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_Профиль_ИнтернетРесурс_Изменить()

// Процедура заполняет параметры команды удаления интернет ресурса
// из списка разрешений профиля безопасности
//
Процедура Параметры_Профиль_ИнтернетРесурс_Удалить() Экспорт

	Параметры_Профиль_Общие();

	ДобавитьПараметрСтроку("acl");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяПрофиля", Истина);

	ДобавитьПараметрПоИмени("ВидОбъектовПрофиля");
	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяОбъектаПрофиля", Истина);

КонецПроцедуры // Параметры_Профиль_ИнтернетРесурс_Удалить()

#КонецОбласти // ПрофилиБезопасности_ИнтернетРесурсы

#КонецОбласти // ПрофилиБезопасности

#Область СчетчикиПотребленияРесурсов

// Процедура заполняет массив описаний параметров рабочего процесса
//
Процедура Параметры_СчетчикРесурсов_Свойства() Экспорт

	ДобавитьОписаниеСвойстваОбъекта("Имя"                            , "name"                     , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ДлительностьСбора"              , "collection-time"          , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ДлительностьСбораМс"            , "duration"                 , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Группировка"                    , "group"                    , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ТипОтбора"                      , "filter-type"              , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Отбор"                          , "filter"                   , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ПроцессорноеВремя"              , "cpu-time"                 , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ДлительностьВызововСУБД"        , "duration-dbms"            , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ДлительностьВызововСервисов"    , "service"                  , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ПотреблениеПамяти"              , "memory"                   , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ОбъемИнформацииСчитаннойСДиска" , "read"                     , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ОбъемИнформацииЗаписаннойНаДиск", "write"                    , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("ОбъемИнформацииПереданнойСУБД"  , "dbms-bytes"               , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("КоличествоСерверныхВызовов"     , "call"                     , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("КоличествоАктивныхСеансов"      , "number-of-active-sessions", , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("КоличествоСеансов"              , "number-of-sessions"       , , "Чтение, Изменение");
	ДобавитьОписаниеСвойстваОбъекта("Описание"                       , "descr"                    , , "Чтение, Изменение");

КонецПроцедуры // Параметры_СчетчикРесурсов_Свойства()

// Процедура заполняет общие параметры запуска команд счетчиков потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Общие()

	ПараметрыЗапуска = Новый Массив();

	ДобавитьПараметрПоИмени("СтрокаПодключенияАгента");

	ДобавитьПараметрСтроку(Перечисления.РежимыАдминистрирования.СчетчикиРесурсов);

	ДобавитьПараметрПоШаблону("--cluster=%1", "ИдентификаторКластера");
	ДобавитьПараметрПоИмени("СтрокаАвторизацииКластера");

КонецПроцедуры // Параметры_СчетчикРесурсов_Общие()

// Процедура заполняет параметры команды получения списка счетчиков потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Список() Экспорт

	Параметры_СчетчикРесурсов_Общие();

	ДобавитьПараметрСтроку("list");

КонецПроцедуры // Параметры_СчетчикРесурсов_Список()

// Процедура заполняет параметры команды изменения счетчика потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Изменить() Экспорт

	Параметры_СчетчикРесурсов_Общие();

	ДобавитьПараметрСтроку("update");

	ДобавитьПрочиеПараметрыКоманды("Изменение");

КонецПроцедуры // Параметры_СчетчикРесурсов_Изменить()

// Процедура заполняет параметры команды получения описания счетчика потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Описание() Экспорт

	Параметры_СчетчикРесурсов_Общие();

	ДобавитьПараметрСтроку("info");
	ДобавитьПараметрПоШаблону("--counter=%1", "ИмяСчетчика");

КонецПроцедуры // Параметры_СчетчикРесурсов_Описание()

// Процедура заполняет параметры команды удаления сервера
//
Процедура Параметры_СчетчикРесурсов_Значения() Экспорт

	Параметры_СчетчикРесурсов_Общие();

	ДобавитьПараметрСтроку("values");

	ДобавитьПараметрПоШаблону("--counter=%1", "ИмяСчетчика");
	ДобавитьПараметрПоШаблону("--object=%1" , "Отбор");
	
КонецПроцедуры // Параметры_СчетчикРесурсов_Значения()

// Процедура заполняет параметры команды удаления счетчика потребления ресурсов
//
Процедура Параметры_СчетчикРесурсов_Удалить() Экспорт

	Параметры_СчетчикРесурсов_Общие();

	ДобавитьПараметрСтроку("remove");

	ДобавитьПараметрПоШаблону("--name=%1", "ИмяСчетчика");

КонецПроцедуры // Параметры_СчетчикРесурсов_Удалить()

#КонецОбласти // СчетчикиПотребленияРесурсов

#КонецОбласти // ПроцедурыЗаполненияПараметровОбъектов

#Область СлужебныеПроцедуры

// Процедура заполняет структуру правил заполнения описаний свойств и команд объектов
//
Процедура ЗаполнитьПолучениеПараметровОбъекта()

	ОписанияОбъектов = Новый Соответствие();

	ОписанияОбъектов.Вставить("Кластер:cluster"                        , "Список:list, 
	                                                                     |Описание:info,
	                                                                     |Добавить:insert,
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");
	
	ОписанияОбъектов.Вставить("Агент.Администратор:agent.admin"        , "Список:list, 
	                                                                     |Добавить:register,
	                                                                     |Удалить:remove");
	
	ОписанияОбъектов.Вставить("Кластер.Администратор:cluster.admin"    , "Список:list, 
	                                                                     |Добавить:register,
	                                                                     |Удалить:remove");
	
	ОписанияОбъектов.Вставить("МенеджерКластера:manager"               , "Список:list, 
	                                                                     |Описание:info");
	
	ОписанияОбъектов.Вставить("Сервис:service"                         , "Список:list");
	
	ОписанияОбъектов.Вставить("Сервер:server"                          , "Список:list, 
	                                                                     |Описание:info,
	                                                                     |Добавить:insert,
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");
	
	ОписанияОбъектов.Вставить("РабочийПроцесс:process"                 , "Список:list, 
	                                                                     |Описание:info");
	
	ОписанияОбъектов.Вставить("РабочийПроцесс.Лицензия:process.license", "Список:list, 
	                                                                     |Описание:info");
	
	ОписанияОбъектов.Вставить("Сеанс:session"                          , "Список:list, 
	                                                                     |Описание:info,
	                                                                     |Удалить:terminate");
	
	ОписанияОбъектов.Вставить("Сеанс.Лицензия:session.license"         , "Список:list, 
	                                                                     |Описание:info");
	
	ОписанияОбъектов.Вставить("Соединение:connection"                  , "Список:list, 
	                                                                     |Описание:info,
	                                                                     |Отключить:disconnect");
	
	ОписанияОбъектов.Вставить("ИБ:infobase"                            , "Список:list, 
	                                                                     |Описание:summary,
	                                                                     |ПолноеОписание:info,
	                                                                     |Добавить:create,
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("Блокировка:lock"                        , "Список:list");
	
	ОписанияОбъектов.Вставить("ТребованиеНазначения:rule"              , "Список:list, 
	                                                                     |Описание:info,
	                                                                     |Добавить:insert,
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove,
	                                                                     |Применить:apply");

	ОписанияОбъектов.Вставить("Профиль:profile"                        , "Список:list, 
	                                                                     |ИзменитьРежимДоступа:acl,
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("Профиль.Каталог:profile.directory"      , "Список:list, 
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("Профиль.COMКласс:profile.com"           , "Список:list, 
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("Профиль.Компонент:profile.addin"        , "Список:list, 
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("Профиль.Модуль:profile.module"          , "Список:list, 
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("Профиль.Приложение:profile.app"         , "Список:list, 
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("Профиль.ИнтернетРесурс:profile.inet"    , "Список:list, 
	                                                                     |Изменить:update,
	                                                                     |Удалить:remove");

	ОписанияОбъектов.Вставить("СчетчикРесурсов:counter"                , "Список:list, 
	                                                                     |Изменить:update,
	                                                                     |Значения:values,
	                                                                     |Удалить:remove");

	Для Каждого ТекОписание Из ОписанияОбъектов Цикл
		ДобавитьПолучениеПараметровОбъекта(ТекОписание.Ключ, ТекОписание.Значение);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПолучениеПараметровОбъекта()

// Процедура добавляет правило заполнения описания свойств и команд объекта
//
Процедура ДобавитьПолучениеПараметровОбъекта(ИменаТипаОбъекта, ДоступныеКоманды)

	Если НЕ ТипЗнч(ПолучениеПараметровОбъектов) = Тип("Соответствие") Тогда
		ПолучениеПараметровОбъектов = Новый Соответствие();
	КонецЕсли;

	МассивИменТипов = СтрРазделить(ИменаТипаОбъекта, ":");

	ОсновноеИмяТипа = СокрЛП(МассивИменТипов[0]);
	ИмяПроцедуры = "Параметры_" + СтрЗаменить(ОсновноеИмяТипа, ".", "_") + "_Свойства"; 

	ПолучениеПараметровОбъекта = Новый Соответствие();
	ПолучениеПараметровОбъекта.Вставить("ИмяТипа", ОсновноеИмяТипа);
	ПолучениеПараметровОбъекта.Вставить("Параметры", ИмяПроцедуры);

	МассивКоманд = СтрРазделить(ДоступныеКоманды, ",");

	ПолучениеПараметровКоманд = Новый Соответствие();

	Для Каждого ТекИменаКоманды Из МассивКоманд Цикл
		МассивИменКоманды = СтрРазделить(СокрЛП(ТекИменаКоманды), ":");

		ОсновноеИмяКоманды = СокрЛП(МассивИменКоманды[0]);
		ИмяПроцедуры = "Параметры_" + СтрЗаменить(ОсновноеИмяТипа, ".", "_") + "_" + ОсновноеИмяКоманды;

		ПолучениеПараметровКоманды = Новый Соответствие();
		ПолучениеПараметровКоманды.Вставить("ИмяКоманды", ОсновноеИмяКоманды);
		ПолучениеПараметровКоманды.Вставить("Параметры", ИмяПроцедуры);

		Для Каждого ТекИмяКоманды Из МассивИменКоманды Цикл
			ПолучениеПараметровКоманд.Вставить(ВРег(СокрЛП(ТекИмяКоманды)), ПолучениеПараметровКоманды);
		КонецЦикла;
	КонецЦикла;

	ПолучениеПараметровОбъекта.Вставить("Команды", ПолучениеПараметровКоманд);

	Для Каждого ТекИмяТипа Из МассивИменТипов Цикл
		ПолучениеПараметровОбъектов.Вставить(ВРег(СокрЛП(ТекИмяТипа)), ПолучениеПараметровОбъекта);
	КонецЦикла;

КонецПроцедуры // ДобавитьПолучениеПараметровОбъекта()

// Процедура добавляет описание свойства в массив свойств
//   
// Параметры:
//   ИмяПараметра           - Строка                - имя свойства объекта
//   ИмяПоляРАК             - Строка                - имя свойства, как оно возвращается утилитой RAC
//   ЗначениеПоУмолчанию    - Произвольный          - значение свойства объекта по умолчанию
//   Использование          - Строка, Структура     - строка содержащая флаги использования, разделенные ","
//                                                    (Чтение, Добавление, Изменение)
//                                                    если указана структура, то в значении можно переопределить
//                                                    имя параметра утилиты RAC
//   
Процедура ДобавитьОписаниеСвойстваОбъекта(Знач ИмяПараметра
	                                    , Знач ИмяПоляРАК
	                                    , Знач ЗначениеПоУмолчанию = ""
	                                    , Знач Использование = "Чтение")

	Если НЕ ТипЗнч(ОписаниеСвойств) = Тип("Массив") Тогда
		ОписаниеСвойств = Новый Массив();
	КонецЕсли;

	Если ТипЗнч(Использование) = Тип("Строка") Тогда
		Использование = Новый Структура(Использование);
	КонецЕсли;

	Если НЕ ТипЗнч(Использование) = Тип("Структура") Тогда
		Использование = Новый Структура();
	КонецЕсли;

	ОписаниеСвойства = Новый Структура();
	ОписаниеСвойства.Вставить("ИмяПараметра"        , ИмяПараметра);
	ОписаниеСвойства.Вставить("ИмяПоляРак"          , ИмяПоляРак);
	ОписаниеСвойства.Вставить("ПараметрКоманды"     , "");
	ОписаниеСвойства.Вставить("ЗначениеПоУмолчанию" , ЗначениеПоУмолчанию);
	ОписаниеСвойства.Вставить("Чтение"              , Использование.Свойство("Чтение"));
	ОписаниеСвойства.Вставить("Добавление"          , Использование.Свойство("Добавление"));
	ОписаниеСвойства.Вставить("Изменение"           , Использование.Свойство("Изменение"));

	Если Использование.Свойство("ПараметрКоманды") Тогда
		ОписаниеСвойства.ПараметрКоманды = Использование.ПараметрКоманды;
	Иначе
		Если ОписаниеСвойства.Добавление ИЛИ ОписаниеСвойства.Изменение Тогда
			ОписаниеСвойства.ПараметрКоманды = "--" + ОписаниеСвойства.ИмяПоляРАК;
		КонецЕсли;
	КонецЕсли;

	ОписаниеСвойств.Добавить(ОписаниеСвойства);

КонецПроцедуры // ДобавитьОписаниеСвойстваОбъекта()

// Процедура добавляет параметры команды из описания свойств объекта
// проверяя флаг использования свойства для различных операций
//   
// Параметры:
//   ИмяФлагаРазрешения           - Строка          - имя проверяемого флага разрешения
//                                                 (Чтение, Добавление, Изменение и т.п.)
//   ВключаяПараметры           - Строка          - список добавляемых параметров, разделенных ","
//   ИсключаяПараметры           - Строка          - список исключаемых параметров, разделенных ","
//   
Процедура ДобавитьПрочиеПараметрыКоманды(Знач ИмяФлагаРазрешения
	                                   , Знач ВключаяПараметры = ""
	                                   , Знач ИсключаяПараметры = "")

	Если ЗначениеЗаполнено(ВключаяПараметры) Тогда
		ВключаяПараметры = СтрРазделить(ВключаяПараметры, ",", Ложь);
		Для й = 0 По ВключаяПараметры.ВГраница() Цикл
			ВключаяПараметры[й] = СокрЛП(ВключаяПараметры[й]);
		КонецЦикла;
	Иначе
		ВключаяПараметры = Новый Массив();
	КонецЕсли;

	ИсключаяПараметры = СтрРазделить(ИсключаяПараметры, ",", Ложь);
	Для й = 0 По ИсключаяПараметры.ВГраница() Цикл
		ИсключаяПараметры[й] = СокрЛП(ИсключаяПараметры[й]);
	КонецЦикла;

	ВсеПараметры = ОписаниеСвойств();

	Для Каждого ТекЭлемент Из ВсеПараметры Цикл
		Если ВключаяПараметры.Количество() > 0 Тогда
			Если ВключаяПараметры.Найти(ТекЭлемент.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		Если ИсключаяПараметры.Количество() > 0 Тогда
			Если НЕ ИсключаяПараметры.Найти(ТекЭлемент.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	    
		Если НЕ ТекЭлемент.Значение[ИмяФлагаРазрешения] Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначенияПараметров.Получить(ТекЭлемент.Ключ) = Неопределено Тогда
			Если ЗначениеЗаполнено(ТекЭлемент.Значение.ЗначениеПоУмолчанию) Тогда
				ЗначенияПараметров.Вставить(ТекЭлемент.Ключ, ТекЭлемент.Значение.ЗначениеПоУмолчанию);
			КонецЕсли;
		КонецЕсли;
		ДобавитьПараметрПоШаблону(ТекЭлемент.Значение.ПараметрКоманды + "=%1", ТекЭлемент.Ключ);
	КонецЦикла;

КонецПроцедуры // ДобавитьПрочиеПараметрыКоманды()

// Процедура добавляет переданное значение в массив параметров запуска команды
//   
// Параметры:
//   Параметр                - Строка            - добавляемое значение
//   Обязательный           - Булево            - Истина - если параметр не заполнен будет выдано исключение
//   ДобавлятьПустой        - Булево            - Истина - если параметр не заполнен будет добавлена пустая строка
//   
Процедура ДобавитьПараметрСтроку(Знач Параметр, Обязательный = Ложь, ДобавлятьПустой = Истина)

	Если НЕ ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска = Новый Массив();
	КонецЕсли;
	
	Если НЕ ТипЗнч(Параметр) = Тип("Строка") Тогда
		Параметр = "";
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Параметр) И Обязательный Тогда
		ВызватьИсключение "Не заполнен обязательный параметр!";
	КонецЕсли;

	Если ЗначениеЗаполнено(Параметр) ИЛИ ДобавлятьПустой Тогда
		ПараметрыЗапуска.Добавить(Параметр);
	КонецЕсли;

КонецПроцедуры // ДобавитьПараметрСтроку()

// Процедура добавляет значение параметра из структуры значений параметров в массив параметров запуска команды
//   
// Параметры:
//   ИмяПараметра           - Строка            - имя параметра в структуре значений параметров
//   Обязательный           - Булево            - Истина - если значение параметра не найдено
//                                                         или не заполнено будет выдано исключение
//   ДобавлятьПустой        - Булево            - Истина - если значение параметра не найдено
//                                                         или не заполнено будет добавлена пустая строка
//   
Процедура ДобавитьПараметрПоИмени(Знач ИмяПараметра, Обязательный = Ложь, ДобавлятьПустой = Истина)

	Если НЕ ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска = Новый Массив();
	КонецЕсли;
	
	Параметр = ЗначенияПараметров.Получить(ИмяПараметра);
	Если Параметр = Неопределено Тогда
		Параметр = "";
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Параметр) И Обязательный Тогда
		ВызватьИсключение СтрШаблон("Не заполнен обязательный параметр %1!", ИмяПараметра);
	КонецЕсли;

	Если ЗначениеЗаполнено(Параметр) ИЛИ ДобавлятьПустой Тогда
		ПараметрыЗапуска.Добавить(Параметр);
	КонецЕсли;

КонецПроцедуры // ДобавитьПараметрПоИмени()

// Процедура выполняет подстановку значения параметра из структуры значений параметров в шаблон
// и добавляет результат в массив параметров запуска команды
//   
// Параметры:
//   ШаблонПараметра        - Строка            - шаблон, в который будет выполнена подстановка
//   ИмяПараметра            - Строка            - имя параметра в структуре значений параметров
//   Обязательный           - Булево            - Истина - если значение параметра не найдено
//                                                         или не заполнено будет выдано исключение
//   
Процедура ДобавитьПараметрПоШаблону(Знач ШаблонПараметра, Знач ИмяПараметра, Знач Обязательный = Ложь)

	Если НЕ ТипЗнч(ПараметрыЗапуска) = Тип("Массив") Тогда
		ПараметрыЗапуска = Новый Массив();
	КонецЕсли;
	
	ЗначениеПараметра = ЗначенияПараметров.Получить(ИмяПараметра);

	Если НЕ ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		Если Обязательный Тогда
			ВызватьИсключение СтрШаблон("Не заполнен обязательный параметр %1!", ИмяПараметра);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ПараметрыЗапуска.Добавить(СтрШаблон(ШаблонПараметра, ЗначениеПараметра));

КонецПроцедуры // ДобавитьПараметрПоШаблону()

// Функция возвращает значение параметра-флага из структуры значений параметров
//   
// Параметры:
//   ИмяПараметра            - Строка            - имя параметра в структуре значений параметров
//   
// Возвращаемое значение:
//    Булево          - значение флага, если параметр отсутствует в структуре значений параметров,
//                    возвращается Ложь
//
Функция ЗначениеФлага(Знач ИмяПараметра)

	Параметр = ЗначенияПараметров.Получить(ИмяПараметра);
	Если Параметр = Неопределено Тогда
		Параметр = Ложь;
	КонецЕсли;

	Возврат Параметр;

КонецФункции // ЗначениеФлага()

#КонецОбласти // СлужебныеПроцедуры

Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
