Перем ВариантыИспользованияРабочегоСервера Экспорт;		// Перечисление.ВариантыИспользованияРабочегоСервера
Перем ВариантыИспользованияМенеджераКластера Экспорт;	// Перечисление.ВариантыИспользованияМенеджераКластера
Перем ВариантыРазмещенияСервисов Экспорт;				// Перечисление.ВариантыРазмещенияСервисов
Перем ВклВыкл Экспорт;									// Перечисление.ВклВыкл
Перем ДаНет Экспорт;									// Перечисление.ДаНет
Перем ПраваДоступа Экспорт;								// Перечисление.ПраваДоступа
Перем РежимыРаспределенияНагрузки Экспорт;				// Перечисление.РежимыРаспределенияНагрузки
Перем СпособыАвторизации Экспорт;						// Перечисление.СпособыАвторизации
Перем ТипыСУБД Экспорт;									// Перечисление.ТипыСУБД
Перем Использование Экспорт;							// Перечисление.Использование
Перем ТипыНазначенияФункциональности Экспорт;			// Перечисление.ТипыНазначенияФункциональности
Перем ОбъектыНазначенияФункциональности Экспорт;		// Перечисление.ОбъектыНазначенияФункциональности
Перем РежимыДоступа Экспорт;							// Перечисление.РежимыДоступа
Перем ВидыОбъектовПрофиляБезопасности Экспорт;			// Перечисление.ВидыОбъектовПрофиляБезопасности

// Процедура добавляет значение перечисления в структуру
//   
// Параметры:
//   Перечисление		 	- Структура		- перечисление
//   Имя				 	- Строка		- имя значения перечисления
//   Значение			 	- Строка		- значение перечисления
//
Процедура ДобавитьЗначениеПеречисления(Перечисление, Знач Имя, Знач Значение)
	
	Если НЕ ТипЗнч(Перечисление) = Тип("Структура") Тогда
		Перечисление = Новый Структура();
	КонецЕсли;

	Перечисление.Вставить(Имя, Значение);

КонецПроцедуры // ДобавитьЗначениеПеречисления()

// Процедура инициализирует значения перечислений
//   
Процедура Инициализация()

	ЗаполнитьВариантыИспользованияРабочегоСервера();
	 
	ЗаполнитьВариантыИспользованияМенеджераКластера();
	 
	ЗаполнитьВариантыРазмещенияСервисов();
	
	ЗаполнитьВклВыкл();
	
	ЗаполнитьДаНет();

	ЗаполнитьПраваДоступа();

	ЗаполнитьРежимыРаспределенияНагрузки();

	ЗаполнитьСпособыАвторизации();

	ЗаполнитьТипыСУБД();
	
	ЗаполнитьИспользование();
	
	ЗаполнитьТипыНазначенияФункциональности();
	
	ЗаполнитьОбъектыНазначенияФункциональности();
    
	ЗаполнитьРежимыДоступа();
	
	ЗаполнитьВидыОбъектовПрофиляБезопасности();

КонецПроцедуры // Инициализация()

// Процедура - заполняет значения перечисления ВариантыИспользованияРабочегоСервера
//
Процедура ЗаполнитьВариантыИспользованияРабочегоСервера()

	ДобавитьЗначениеПеречисления(ВариантыИспользованияРабочегоСервера, "Главный", "main");
	ДобавитьЗначениеПеречисления(ВариантыИспользованияРабочегоСервера, "Обычный", "normal");

КонецПроцедуры // ЗаполнитьВариантыИспользованияРабочегоСервера()

// Процедура - заполняет значения перечисления ВариантыИспользованияМенеджераКластера
//
Процедура ЗаполнитьВариантыИспользованияМенеджераКластера()

	ДобавитьЗначениеПеречисления(ВариантыИспользованияМенеджераКластера, "Обычный", "normal");

КонецПроцедуры // ЗаполнитьВариантыИспользованияМенеджераКластера()

// Процедура - заполняет значения перечисления ВариантыРазмещенияСервисов
//
Процедура ЗаполнитьВариантыРазмещенияСервисов()

	ДобавитьЗначениеПеречисления(ВариантыРазмещенияСервисов, "ВОтдельныхМенеджерах"	, "all");
	ДобавитьЗначениеПеречисления(ВариантыРазмещенияСервисов, "ВОдномМенеджере"		, "none");

КонецПроцедуры // ЗаполнитьВариантыРазмещенияСервисов()

// Процедура - заполняет значения перечисления ВклВыкл
//
Процедура ЗаполнитьВклВыкл()

	ДобавитьЗначениеПеречисления(ВклВыкл, "Включено"	, "on");
	ДобавитьЗначениеПеречисления(ВклВыкл, "Выключено"	, "off");

КонецПроцедуры // ЗаполнитьВклВыкл()

// Процедура - заполняет значения перечисления ДаНет
//
Процедура ЗаполнитьДаНет()

	ДобавитьЗначениеПеречисления(ДаНет, "Да"	, "yes");
	ДобавитьЗначениеПеречисления(ДаНет, "Нет"	, "no");

КонецПроцедуры // ЗаполнитьДаНет()

// Процедура - заполняет значения перечисления ПраваДоступа
//
Процедура ЗаполнитьПраваДоступа()

	ДобавитьЗначениеПеречисления(ПраваДоступа, "Разрешено", "allow");
	ДобавитьЗначениеПеречисления(ПраваДоступа, "Запрещено", "deny");

КонецПроцедуры // ЗаполнитьПраваДоступа()

// Процедура - заполняет значения перечисления РежимыРаспределенияНагрузки
//
Процедура ЗаполнитьРежимыРаспределенияНагрузки()

	ДобавитьЗначениеПеречисления(РежимыРаспределенияНагрузки, "ПоПамяти"			, "memory");
	ДобавитьЗначениеПеречисления(РежимыРаспределенияНагрузки, "ПоПроизводительности", "performance");

КонецПроцедуры // ЗаполнитьРежимыРаспределенияНагрузки()

// Процедура - заполняет значения перечисления СпособыАвторизации
//
Процедура ЗаполнитьСпособыАвторизации()

	ДобавитьЗначениеПеречисления(СпособыАвторизации, "Пароль"	, "pwd");
	ДобавитьЗначениеПеречисления(СпособыАвторизации, "ОС"		, "os");
	ДобавитьЗначениеПеречисления(СпособыАвторизации, "ПарольИОС", "pwd|os");

КонецПроцедуры // ЗаполнитьСпособыАвторизации()

// Процедура - заполняет значения перечисления ТипыСУБД
//
Процедура ЗаполнитьТипыСУБД()

	ДобавитьЗначениеПеречисления(ТипыСУБД, "MSSQLServer"	, "MSSQLServer");
	ДобавитьЗначениеПеречисления(ТипыСУБД, "PostgreSQL"		, "PostgreSQL");
	ДобавитьЗначениеПеречисления(ТипыСУБД, "IBMDB2"			, "IBMDB2");
	ДобавитьЗначениеПеречисления(ТипыСУБД, "OracleDatabase"	, "OracleDatabase");

КонецПроцедуры // ЗаполнитьТипыСУБД()

// Процедура - заполняет значения перечисления Использование
//
Процедура ЗаполнитьИспользование()

	ДобавитьЗначениеПеречисления(Использование, "Использовать"	, "use");

КонецПроцедуры // ЗаполнитьИспользование()

// Процедура - заполняет значения перечисления ТипыНазначенияФункциональности
//
Процедура ЗаполнитьТипыНазначенияФункциональности()

	ДобавитьЗначениеПеречисления(ТипыНазначенияФункциональности, "Авто"			, "auto");
	ДобавитьЗначениеПеречисления(ТипыНазначенияФункциональности, "Назначать"	, "always");
	ДобавитьЗначениеПеречисления(ТипыНазначенияФункциональности, "НеНазначать"	, "never");

КонецПроцедуры // ЗаполнитьТипыНазначенияФункциональности()

// Процедура - заполняет значения перечисления ОбъектыНазначенияФункциональности
//
Процедура ЗаполнитьОбъектыНазначенияФункциональности()

	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ЛюбойОбъект"						, "");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"КлиентскиеСоединения"				, "Connection");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ОбновлениеКонфигураций"			, "DataBaseConfigurationUpdateService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ЖурналРегистрации"					, "EventLogService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ПровайдерOpenID"					, "OpenID2ProviderContextService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ПолнотекстовыйПоиск"				, "FulltextSearchService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ПользовательскиеНастройки"			, "SettingsService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ТранзакционныеБлокировки"			, "TransactionLockService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ВнешнееУправлениеСеансами"			, "ExternalSessionManagerService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ВнешниеИсточникиXML"				, "ExternalDataSourceXMLAService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"Тестирование"						, "ClientTestingService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"Лицензирование"					, "LicenseService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ДопФункцииКластера"				, "AuxiliaryService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"Время"								, "TimestampService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"БлокировкиОбъектов"				, "DataEditLockService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"СеансовыеДанные"					, "SessionDataService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"Задания"							, "JobService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"Нумерация"							, "NumerationService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ПовторноеИспользованиеСеансов"		, "SessionReuseService");
	ДобавитьЗначениеПеречисления(ОбъектыНазначенияФункциональности,
								"ВнешниеИсточникиODBC"				, "ExternalDataSourceODBCService");

КонецПроцедуры // ЗаполнитьОбъектыНазначенияФункциональности()

// Процедура - заполняет значения перечисления РежимыДоступа
//
Процедура ЗаполнитьРежимыДоступа()

	ДобавитьЗначениеПеречисления(РежимыДоступа		, "Список"			, "list");
	ДобавитьЗначениеПеречисления(РежимыДоступа		, "ПолныйДоступ"	, "full");

КонецПроцедуры // ЗаполнитьРежимыДоступа()

// Процедура - заполняет значения перечисления ВидыОбъектовПрофиляБезопасности
//
Процедура ЗаполнитьВидыОбъектовПрофиляБезопасности()

	ДобавитьЗначениеПеречисления(ВидыОбъектовПрофиляБезопасности		, "Каталог"			, "directory");
	ДобавитьЗначениеПеречисления(ВидыОбъектовПрофиляБезопасности		, "COMКласс"		, "com");
	ДобавитьЗначениеПеречисления(ВидыОбъектовПрофиляБезопасности		, "Компонент"		, "addin");
	ДобавитьЗначениеПеречисления(ВидыОбъектовПрофиляБезопасности		, "Модуль"			, "module");
	ДобавитьЗначениеПеречисления(ВидыОбъектовПрофиляБезопасности		, "Приложение"		, "app");
	ДобавитьЗначениеПеречисления(ВидыОбъектовПрофиляБезопасности		, "ИнтернетРесурс"	, "inet");

КонецПроцедуры // ЗаполнитьВидыОбъектовПрофиляБезопасности()

Инициализация();